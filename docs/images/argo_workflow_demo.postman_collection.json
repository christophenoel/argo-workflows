{
	"info": {
		"_postman_id": "65b81da8-ed48-403e-a8cf-a8567da57fc4",
		"name": "Argo Workflow Demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24558637",
		"_collection_link": "https://spacebel.postman.co/workspace/OHDSA-Project~c57b7a43-a652-4794-a8a6-f652327cd762/collection/24558637-65b81da8-ed48-403e-a8cf-a8567da57fc4?action=share&source=collection_link&creator=24558637"
	},
	"item": [
		{
			"name": "Template",
			"item": [
				{
					"name": "LIST Workflow Templates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{argo-endpoint}}/workflow-templates/{{namespace}}",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflow-templates",
								"{{namespace}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE Workflow Template",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"template\": {\r\n  \"apiVersion\": \"argoproj.io/v1alpha1\",\r\n  \"kind\": \"WorkflowTemplate\",\r\n  \"metadata\": {\r\n    \"name\": \"tutorial-artifact-producer-bis\"\r\n  },\r\n  \"spec\": {\r\n    \"entrypoint\": \"main\",\r\n    \"arguments\": {\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"message\",\r\n          \"value\": \"default value\"\r\n        }\r\n      ]\r\n    },\r\n    \"templates\": [\r\n      {\r\n        \"name\": \"main\",\r\n        \"dag\": {\r\n          \"tasks\": [\r\n            {\r\n              \"name\": \"step-A\",\r\n              \"template\": \"step-template-a\",\r\n              \"arguments\": {\r\n                \"parameters\": [\r\n                  {\r\n                    \"name\": \"step-a-param-1\",\r\n                    \"value\": \"{{workflow.parameters.message}}\"\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n            {\r\n              \"name\": \"step-B\",\r\n              \"dependencies\": [\r\n                \"step-A\"\r\n              ],\r\n              \"template\": \"step-template-b\",\r\n              \"arguments\": {\r\n                \"parameters\": [\r\n                  {\r\n                    \"name\": \"step-b-param-1\",\r\n                    \"value\": \"{{tasks.step-A.outputs.parameters.output-param-1}}\"\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"name\": \"step-template-a\",\r\n        \"inputs\": {\r\n          \"parameters\": [\r\n            {\r\n              \"name\": \"step-a-param-1\"\r\n            }\r\n          ]\r\n        },\r\n        \"outputs\": {\r\n          \"parameters\": [\r\n            {\r\n              \"name\": \"output-param-1\",\r\n              \"valueFrom\": {\r\n                \"path\": \"/test.txt\"\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        \"script\": {\r\n          \"image\": \"alpine\",\r\n          \"command\": [\r\n            \"/bin/sh\"\r\n          ],\r\n          \"source\": \"echo \\\"{{inputs.parameters.step-a-param-1}} \\\" >> /test.txt\"\r\n        }\r\n      },\r\n      {\r\n        \"name\": \"step-template-b\",\r\n        \"inputs\": {\r\n          \"parameters\": [\r\n            {\r\n              \"name\": \"step-b-param-1\"\r\n            }\r\n          ]\r\n        },\r\n        \"outputs\": {\r\n          \"artifacts\": [\r\n            {\r\n              \"name\": \"output-artifact\",\r\n              \"path\": \"/outputs\"\r\n            }\r\n          ]\r\n        },\r\n        \"script\": {\r\n          \"image\": \"alpine\",\r\n          \"command\": [\r\n            \"/bin/sh\"\r\n          ],\r\n          \"source\": \" mkdir -p /outputs && echo \\\"{{inputs.parameters.step-b-param-1}}\\\" >> /outputs/result.txt\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{argo-endpoint}}/workflow-templates/{{namespace}}",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflow-templates",
								"{{namespace}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "FILTER BY label",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Workflow",
			"item": [
				{
					"name": "LIST Workflows",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6InVwbFRKNUROR052aTZNSG1zbHFfQmVtS1RieG14eTN4Vi1GZ203SDZXUUEifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJhcmdvIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImFyZ28tdXNlci5zZXJ2aWNlLWFjY291bnQtdG9rZW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiYXJnby11c2VyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNzgxMmI0MmYtMWZjYS00ZjY2LThhN2EtMjhjMWJkYzkzMzU0Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmFyZ286YXJnby11c2VyIn0.khEZVplgz737W3aQ1vlh9v00yiTlsr46g1S7lUMlrv64Cx93dW1w-1AHQlhGXqLc3He9ptEyCUKiCORxcvyKX2DhZHCgd4D0InoUTMbMqoiDi62psFPMFgPtsBfmec1s4MFvWaqJ1V0MYHqPbY0GBfmoy2HVGCK5s85CHGqUn66uQclCWVXhJYo_XZuQMvSeLnZ9zEKAF9EhRdHXZXAQQ7OiQvxy_X7kITXUkxAZKBgZ1gDxLI7r5tYNGtemXAb4ErzAUbf_oiwy_yB5o3LPtZE5PRZ2VvL6dPSskVHtV_S6uvWSzowkxNjjpiptTfnTesuG2A6RnUPF7_zY63O4cQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{argo-endpoint}}/workflows/argo",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflows",
								"argo"
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://172.17.20.10:32746/api/v1/workflows/argo",
									"protocol": "https",
									"host": [
										"172",
										"17",
										"20",
										"10"
									],
									"port": "32746",
									"path": [
										"api",
										"v1",
										"workflows",
										"argo"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Grpc-Metadata-Content-Type",
									"value": "application/grpc"
								},
								{
									"key": "X-Ratelimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-Ratelimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-Ratelimit-Reset",
									"value": "Wed, 03 Jan 2024 10:31:44 UTC"
								},
								{
									"key": "Date",
									"value": "Wed, 03 Jan 2024 10:31:44 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"metadata\": {\n        \"resourceVersion\": \"29294564\"\n    },\n    \"items\": [\n        {\n            \"metadata\": {\n                \"name\": \"hello-world-dvmxl\",\n                \"generateName\": \"hello-world-\",\n                \"namespace\": \"argo\",\n                \"uid\": \"63ef1252-aed3-4424-bf10-2e05784303e8\",\n                \"resourceVersion\": \"29285554\",\n                \"generation\": 4,\n                \"creationTimestamp\": \"2024-01-03T08:19:38Z\",\n                \"labels\": {\n                    \"workflows.argoproj.io/completed\": \"true\",\n                    \"workflows.argoproj.io/phase\": \"Error\"\n                },\n                \"annotations\": {\n                    \"workflows.argoproj.io/pod-name-format\": \"v2\"\n                },\n                \"managedFields\": [\n                    {\n                        \"manager\": \"kubectl.exe\",\n                        \"operation\": \"Update\",\n                        \"apiVersion\": \"argoproj.io/v1alpha1\",\n                        \"time\": \"2024-01-03T08:19:38Z\",\n                        \"fieldsType\": \"FieldsV1\",\n                        \"fieldsV1\": {\n                            \"f:metadata\": {\n                                \"f:generateName\": {}\n                            }\n                        }\n                    },\n                    {\n                        \"manager\": \"workflow-controller\",\n                        \"operation\": \"Update\",\n                        \"apiVersion\": \"argoproj.io/v1alpha1\",\n                        \"time\": \"2024-01-03T08:20:12Z\",\n                        \"fieldsType\": \"FieldsV1\",\n                        \"fieldsV1\": {\n                            \"f:metadata\": {\n                                \"f:annotations\": {\n                                    \".\": {},\n                                    \"f:workflows.argoproj.io/pod-name-format\": {}\n                                },\n                                \"f:labels\": {\n                                    \".\": {},\n                                    \"f:workflows.argoproj.io/completed\": {},\n                                    \"f:workflows.argoproj.io/phase\": {}\n                                }\n                            },\n                            \"f:spec\": {},\n                            \"f:status\": {}\n                        }\n                    }\n                ]\n            },\n            \"spec\": {\n                \"templates\": [\n                    {\n                        \"name\": \"whalesay\",\n                        \"inputs\": {},\n                        \"outputs\": {},\n                        \"metadata\": {},\n                        \"container\": {\n                            \"name\": \"\",\n                            \"image\": \"docker/whalesay\",\n                            \"command\": [\n                                \"cowsay\"\n                            ],\n                            \"args\": [\n                                \"hello world\"\n                            ],\n                            \"resources\": {}\n                        }\n                    }\n                ],\n                \"entrypoint\": \"whalesay\",\n                \"arguments\": {}\n            },\n            \"status\": {\n                \"phase\": \"Error\",\n                \"startedAt\": \"2024-01-03T09:03:48Z\",\n                \"finishedAt\": \"2024-01-03T09:04:22Z\",\n                \"progress\": \"0/1\",\n                \"message\": \"Error (exit code 1): pods \\\"hello-world-dvmxl\\\" is forbidden: User \\\"system:serviceaccount:argo:default\\\" cannot patch resource \\\"pods\\\" in API group \\\"\\\" in the namespace \\\"argo\\\"\",\n                \"nodes\": {\n                    \"hello-world-dvmxl\": {\n                        \"id\": \"hello-world-dvmxl\",\n                        \"name\": \"hello-world-dvmxl\",\n                        \"displayName\": \"hello-world-dvmxl\",\n                        \"type\": \"Pod\",\n                        \"templateName\": \"whalesay\",\n                        \"templateScope\": \"local/hello-world-dvmxl\",\n                        \"phase\": \"Error\",\n                        \"message\": \"Error (exit code 1): pods \\\"hello-world-dvmxl\\\" is forbidden: User \\\"system:serviceaccount:argo:default\\\" cannot patch resource \\\"pods\\\" in API group \\\"\\\" in the namespace \\\"argo\\\"\",\n                        \"startedAt\": \"2024-01-03T09:03:48Z\",\n                        \"finishedAt\": \"2024-01-03T09:04:22Z\",\n                        \"progress\": \"0/1\",\n                        \"resourcesDuration\": {\n                            \"cpu\": 12,\n                            \"memory\": 12\n                        },\n                        \"outputs\": {\n                            \"exitCode\": \"0\"\n                        },\n                        \"hostNodeName\": \"l-k8s01-node03.spb.spacebel.be\"\n                    }\n                },\n                \"conditions\": [\n                    {\n                        \"type\": \"PodRunning\",\n                        \"status\": \"False\"\n                    },\n                    {\n                        \"type\": \"Completed\",\n                        \"status\": \"True\"\n                    }\n                ],\n                \"resourcesDuration\": {\n                    \"cpu\": 12,\n                    \"memory\": 12\n                },\n                \"artifactRepositoryRef\": {\n                    \"default\": true,\n                    \"artifactRepository\": {}\n                },\n                \"artifactGCStatus\": {\n                    \"notSpecified\": true\n                }\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Execute template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"workflow-execution-name\", jsonData.metadata.name);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"namespace\": \"{{namespace}}\",\r\n  \"serverDryRun\": false,\r\n  \"workflow\": {\r\n      \"metadata\": {\r\n        \"generateName\": \"demo-example-new-\",\r\n        \"namespace\": \"{{namespace}}\",\r\n        \"labels\": {\r\n          \"workflows.argoproj.io/completed\": \"false\"\r\n         }\r\n      },\r\n     \"spec\": {\r\n        \"entrypoint\": \"main\",\r\n        \"arguments\":  {\"parameters\":[{\"name\": \"message\",\"value\":\"test-passing-value-from-file\" }]},\r\n        \"workflowTemplateRef\":{\"name\": \"tutorial-artifact-producer-bis\"}\r\n  }\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{argo-endpoint}}/workflows/{{namespace}}",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflows",
								"{{namespace}}"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflows",
								"{{namespace}}",
								"{{workflow-execution-name}}"
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://172.17.20.10:32746/api/v1/workflows/argo/hello-world-kr9rs",
									"protocol": "https",
									"host": [
										"172",
										"17",
										"20",
										"10"
									],
									"port": "32746",
									"path": [
										"api",
										"v1",
										"workflows",
										"argo",
										"hello-world-kr9rs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Grpc-Metadata-Content-Type",
									"value": "application/grpc"
								},
								{
									"key": "X-Ratelimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-Ratelimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-Ratelimit-Reset",
									"value": "Wed, 03 Jan 2024 11:10:49 UTC"
								},
								{
									"key": "Date",
									"value": "Wed, 03 Jan 2024 11:10:49 GMT"
								},
								{
									"key": "Content-Length",
									"value": "2003"
								}
							],
							"cookie": [],
							"body": "{\n    \"metadata\": {\n        \"name\": \"hello-world-kr9rs\",\n        \"generateName\": \"hello-world-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"3e991b70-b2bf-4c49-a56c-1c9020f790b1\",\n        \"resourceVersion\": \"29295677\",\n        \"generation\": 3,\n        \"creationTimestamp\": \"2024-01-03T09:57:45Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/completed\": \"true\",\n            \"workflows.argoproj.io/phase\": \"Succeeded\"\n        },\n        \"annotations\": {\n            \"workflows.argoproj.io/pod-name-format\": \"v2\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"kubectl.exe\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-01-03T09:57:45Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:generateName\": {}\n                    }\n                }\n            },\n            {\n                \"manager\": \"workflow-controller\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-01-03T09:57:55Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:annotations\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/pod-name-format\": {}\n                        },\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/completed\": {},\n                            \"f:workflows.argoproj.io/phase\": {}\n                        }\n                    },\n                    \"f:spec\": {},\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"templates\": [\n            {\n                \"name\": \"whalesay\",\n                \"inputs\": {},\n                \"outputs\": {},\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"docker/whalesay\",\n                    \"command\": [\n                        \"cowsay\"\n                    ],\n                    \"args\": [\n                        \"hello world\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        ],\n        \"entrypoint\": \"whalesay\",\n        \"arguments\": {}\n    },\n    \"status\": {\n        \"phase\": \"Succeeded\",\n        \"startedAt\": \"2024-01-03T10:41:55Z\",\n        \"finishedAt\": \"2024-01-03T10:42:05Z\",\n        \"progress\": \"1/1\",\n        \"nodes\": {\n            \"hello-world-kr9rs\": {\n                \"id\": \"hello-world-kr9rs\",\n                \"name\": \"hello-world-kr9rs\",\n                \"displayName\": \"hello-world-kr9rs\",\n                \"type\": \"Pod\",\n                \"templateName\": \"whalesay\",\n                \"templateScope\": \"local/hello-world-kr9rs\",\n                \"phase\": \"Succeeded\",\n                \"startedAt\": \"2024-01-03T10:41:55Z\",\n                \"finishedAt\": \"2024-01-03T10:42:11Z\",\n                \"progress\": \"1/1\",\n                \"resourcesDuration\": {\n                    \"cpu\": 6,\n                    \"memory\": 6\n                },\n                \"outputs\": {\n                    \"exitCode\": \"0\"\n                },\n                \"hostNodeName\": \"l-k8s01-node03.spb.spacebel.be\"\n            }\n        },\n        \"conditions\": [\n            {\n                \"type\": \"PodRunning\",\n                \"status\": \"False\"\n            },\n            {\n                \"type\": \"Completed\",\n                \"status\": \"True\"\n            }\n        ],\n        \"resourcesDuration\": {\n            \"cpu\": 6,\n            \"memory\": 6\n        },\n        \"artifactRepositoryRef\": {\n            \"default\": true,\n            \"artifactRepository\": {}\n        },\n        \"artifactGCStatus\": {\n            \"notSpecified\": true\n        },\n        \"taskResultsCompleted\": {\n            \"hello-world-kr9rs\": true\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Download Output Artifact",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{argo-artifact-endpoint}}/{{namespace}}/workflows/{{workflow-execution-name}}/{{workflow-outbound-node}}/outputs/output-artifact",
							"host": [
								"{{argo-artifact-endpoint}}"
							],
							"path": [
								"{{namespace}}",
								"workflows",
								"{{workflow-execution-name}}",
								"{{workflow-outbound-node}}",
								"outputs",
								"output-artifact"
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://172.17.20.10:32746/api/v1/workflows/argo/hello-world-kr9rs",
									"protocol": "https",
									"host": [
										"172",
										"17",
										"20",
										"10"
									],
									"port": "32746",
									"path": [
										"api",
										"v1",
										"workflows",
										"argo",
										"hello-world-kr9rs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Grpc-Metadata-Content-Type",
									"value": "application/grpc"
								},
								{
									"key": "X-Ratelimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-Ratelimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-Ratelimit-Reset",
									"value": "Wed, 03 Jan 2024 11:10:49 UTC"
								},
								{
									"key": "Date",
									"value": "Wed, 03 Jan 2024 11:10:49 GMT"
								},
								{
									"key": "Content-Length",
									"value": "2003"
								}
							],
							"cookie": [],
							"body": "{\n    \"metadata\": {\n        \"name\": \"hello-world-kr9rs\",\n        \"generateName\": \"hello-world-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"3e991b70-b2bf-4c49-a56c-1c9020f790b1\",\n        \"resourceVersion\": \"29295677\",\n        \"generation\": 3,\n        \"creationTimestamp\": \"2024-01-03T09:57:45Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/completed\": \"true\",\n            \"workflows.argoproj.io/phase\": \"Succeeded\"\n        },\n        \"annotations\": {\n            \"workflows.argoproj.io/pod-name-format\": \"v2\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"kubectl.exe\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-01-03T09:57:45Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:generateName\": {}\n                    }\n                }\n            },\n            {\n                \"manager\": \"workflow-controller\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-01-03T09:57:55Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:annotations\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/pod-name-format\": {}\n                        },\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/completed\": {},\n                            \"f:workflows.argoproj.io/phase\": {}\n                        }\n                    },\n                    \"f:spec\": {},\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"templates\": [\n            {\n                \"name\": \"whalesay\",\n                \"inputs\": {},\n                \"outputs\": {},\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"docker/whalesay\",\n                    \"command\": [\n                        \"cowsay\"\n                    ],\n                    \"args\": [\n                        \"hello world\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        ],\n        \"entrypoint\": \"whalesay\",\n        \"arguments\": {}\n    },\n    \"status\": {\n        \"phase\": \"Succeeded\",\n        \"startedAt\": \"2024-01-03T10:41:55Z\",\n        \"finishedAt\": \"2024-01-03T10:42:05Z\",\n        \"progress\": \"1/1\",\n        \"nodes\": {\n            \"hello-world-kr9rs\": {\n                \"id\": \"hello-world-kr9rs\",\n                \"name\": \"hello-world-kr9rs\",\n                \"displayName\": \"hello-world-kr9rs\",\n                \"type\": \"Pod\",\n                \"templateName\": \"whalesay\",\n                \"templateScope\": \"local/hello-world-kr9rs\",\n                \"phase\": \"Succeeded\",\n                \"startedAt\": \"2024-01-03T10:41:55Z\",\n                \"finishedAt\": \"2024-01-03T10:42:11Z\",\n                \"progress\": \"1/1\",\n                \"resourcesDuration\": {\n                    \"cpu\": 6,\n                    \"memory\": 6\n                },\n                \"outputs\": {\n                    \"exitCode\": \"0\"\n                },\n                \"hostNodeName\": \"l-k8s01-node03.spb.spacebel.be\"\n            }\n        },\n        \"conditions\": [\n            {\n                \"type\": \"PodRunning\",\n                \"status\": \"False\"\n            },\n            {\n                \"type\": \"Completed\",\n                \"status\": \"True\"\n            }\n        ],\n        \"resourcesDuration\": {\n            \"cpu\": 6,\n            \"memory\": 6\n        },\n        \"artifactRepositoryRef\": {\n            \"default\": true,\n            \"artifactRepository\": {}\n        },\n        \"artifactGCStatus\": {\n            \"notSpecified\": true\n        },\n        \"taskResultsCompleted\": {\n            \"hello-world-kr9rs\": true\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Submit Workflow File passing",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"namespace\": \"argo\",\r\n  \"serverDryRun\": false,\r\n  \"workflow\": {\r\n      \"metadata\": {\r\n        \"generateName\": \"demo-example-new-\",\r\n        \"namespace\": \"argo\",\r\n        \"labels\": {\r\n          \"workflows.argoproj.io/completed\": \"false\"\r\n         }\r\n      },\r\n     \"spec\": {  \r\n        \"entrypoint\": \"main\",\r\n        \"arguments\":  {\"parameters\":[{\"name\": \"workflow-param-1\",\"value\":\"test-passing-value-from-file\" }]},\r\n  \"templates\":[\r\n    {\"name\": \"main\",\r\n      \"dag\":{\r\n        \"tasks\":[\r\n            {\"name\": \"step-A\",\r\n             \"template\": \"step-template-a\",\r\n             \"arguments\":{\r\n                \"parameters\":[{\"name\": \"step-a-param-1\",\"value\": \"{{workflow.parameters.workflow-param-1}}\"}]\r\n                }\r\n            },\r\n            {\"name\": \"step-B\",\r\n            \"dependencies\": [ \"step-A\" ],\r\n            \"template\": \"step-template-b\",\r\n            \"arguments\":\r\n                {\"parameters\":[\r\n                    {\r\n                    \"name\": \"step-b-param-1\",\r\n                     \"value\": \"{{tasks.step-A.outputs.parameters.output-param-1}}\"\r\n                     }\r\n                  ]}\r\n      }\r\n    ]}},\r\n    {\r\n        \"name\": \"step-template-a\",\r\n        \"inputs\":{\r\n                \"parameters\":[{\"name\": \"step-a-param-1\"}]\r\n            },\r\n        \"outputs\": {\r\n            \"parameters\":[{\"name\": \"output-param-1\",\"valueFrom\":{\"path\": \"/test.txt\"} }]\r\n            }\r\n        ,\r\n      \"script\":{\r\n        \"image\": \"alpine\",\r\n        \"command\": [\"/bin/sh\"],\r\n        \"source\": \"echo \\\"{{inputs.parameters.step-a-param-1}} \\\" >> /test.txt\"\r\n      } \r\n    },\r\n    {\r\n      \"name\": \"step-template-b\",\r\n      \"inputs\": {\r\n         \"parameters\":[{\"name\": \"step-b-param-1\"}]\r\n        },\r\n       \"outputs\":{\r\n           \"artifacts\":[{\"name\": \"output-artifact\",\"path\": \"/outputs\"}]\r\n       },\r\n     \"script\":{\r\n        \"image\": \"alpine\",\r\n        \"command\": [\"/bin/sh\"],\r\n        \"source\": \" mkdir -p /outputs && echo \\\"{{inputs.parameters.step-b-param-1}}\\\" >> /outputs/result.txt\"\r\n     }\r\n    }\r\n    ]\r\n}\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{argo-endpoint}}/workflows/argo",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflows",
								"argo"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Submit Workflow Artifacts passing",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"namespace\": \"argo\",\r\n  \"serverDryRun\": false,\r\n  \"workflow\": {\r\n      \"metadata\": {\r\n        \"generateName\": \"demo-example-\",\r\n        \"namespace\": \"argo\",\r\n        \"labels\": {\r\n          \"workflows.argoproj.io/completed\": \"false\"\r\n         }\r\n      },\r\n     \"spec\": {  \r\n        \"entrypoint\": \"main\",\r\n        \"arguments\":  {\"parameters\":[{\"name\": \"workflow-param-1\",\"value\":\"test\" }]},\r\n  \"templates\":[\r\n    {\"name\": \"main\",\r\n      \"dag\":{\r\n        \"tasks\":[\r\n            {\"name\": \"step-A\",\r\n             \"template\": \"step-template-a\",\r\n             \"arguments\":{\r\n                \"parameters\":[{\"name\": \"template-param-1\",\"value\": \"{{workflow.parameters.workflow-param-1}}\"}]\r\n                }\r\n            },\r\n            {\"name\": \"step-B\",\r\n            \"dependencies\": [ \"step-A\" ],\r\n            \"template\": \"step-template-b\",\r\n            \"arguments\":{\r\n                \"artifacts\":[{\"name\": \"input-artifact-1\",\"from\":\"{{tasks.step-A.outputs.artifacts.output-artifact-1}}\"}] \r\n                }\r\n      }\r\n    ]}},\r\n    {\r\n        \"name\": \"step-template-a\",\r\n        \"inputs\":{\r\n                \"parameters\":[{\"name\": \"template-param-1\"}]\r\n            },\r\n        \"outputs\": {\r\n            \"artifacts\":[{\"name\": \"output-artifact-1\",\"path\": \"/some-directory\"}]\r\n            }\r\n        ,\r\n      \"script\":{\r\n        \"image\": \"alpine\",\r\n        \"command\": [\"/bin/sh\"],\r\n        \"source\": \"mkdir -p /some-directory && echo \\\"toto\\\" >> /some-directory/{{inputs.parameters.template-param-1}}.txt\"\r\n      } \r\n    },\r\n    {\r\n      \"name\": \"step-template-b\",\r\n      \"inputs\": {\r\n         \"artifacts\":[{\"name\": \"input-artifact-1\", \"path\":\"/artifacts/\"}]\r\n        },\r\n     \"outputs\":{\r\n        \"artifacts\":[{\"name\": \"result-artifact\",\"path\": \"/p2.txt\"}]\r\n        },\r\n     \"script\":{\r\n        \"image\": \"alpine\",\r\n        \"command\": [\"/bin/sh\"],\r\n        \"source\": \"ls -la /artifacts >> /p2.txt && cat /p2.txt\"\r\n     }\r\n    }\r\n    ]\r\n}\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{argo-endpoint}}/workflows/argo",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflows",
								"argo"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Submit Workflow Artifacts consuming",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"namespace\": \"argo\",\r\n  \"serverDryRun\": false,\r\n  \"workflow\": {\r\n      \"metadata\": {\r\n        \"generateName\": \"demo-example-\",\r\n        \"namespace\": \"argo\",\r\n        \"labels\": {\r\n          \"workflows.argoproj.io/completed\": \"false\"\r\n         }\r\n      },\r\n     \"spec\": {  \r\n        \"entrypoint\": \"main\",\r\n        \"arguments\":  {\"parameters\":[{\"name\": \"workflow-param-1\",\"value\":\"test\" }]},\r\n  \"templates\":[\r\n    {\"name\": \"main\",\r\n      \"dag\":{\r\n        \"tasks\":[\r\n            {\"name\": \"consume\",\r\n             \"template\": \"step-template-consume\"\r\n            }\r\n    ]}},\r\n    {\r\n        \"name\": \"step-template-consume\",\r\n        \"inputs\":{\r\n                \"artifacts\":[{\"name\": \"source-file\",\"path\":\"/inputs/lorem.txt\",\"s3\":{\"key\":\"lorem.txt\"}}]\r\n            },\r\n        \"outputs\": {\r\n            \"artifacts\":[{\"name\": \"output-artifact-1\",\"path\": \"/some-directory\"}]\r\n            }\r\n        ,\r\n      \"script\":{\r\n        \"image\": \"alpine\",\r\n        \"command\": [\"/bin/sh\"],\r\n        \"source\": \"mkdir -p /some-directory && cp inputs/lorem.txt /some-directory/lorem.txt && echo \\\"toto\\\" >> /some-directory/output.txt\"\r\n      } \r\n    }]\r\n}\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{argo-endpoint}}/workflows/argo",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflows",
								"argo"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "STOP Workflow",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"namespace\": \"argo\",\r\n  \"serverDryRun\": false,\r\n  \"workflow\": {\r\n      \"metadata\": {\r\n        \"generateName\": \"demo-example-new-\",\r\n        \"namespace\": \"argo\",\r\n        \"labels\": {\r\n          \"workflows.argoproj.io/completed\": \"false\"\r\n         }\r\n      },\r\n     \"spec\": {  \r\n        \"entrypoint\": \"main\",\r\n        \"arguments\":  {\"parameters\":[{\"name\": \"workflow-param-1\",\"value\":\"test-passing-value-from-file\" }]},\r\n  \"templates\":[\r\n    {\"name\": \"main\",\r\n      \"dag\":{\r\n        \"tasks\":[\r\n            {\"name\": \"step-A\",\r\n             \"template\": \"step-template-a\",\r\n             \"arguments\":{\r\n                \"parameters\":[{\"name\": \"step-a-param-1\",\"value\": \"{{workflow.parameters.workflow-param-1}}\"}]\r\n                }\r\n            },\r\n            {\"name\": \"step-B\",\r\n            \"dependencies\": [ \"step-A\" ],\r\n            \"template\": \"step-template-b\",\r\n            \"arguments\":\r\n                {\"parameters\":[\r\n                    {\r\n                    \"name\": \"step-b-param-1\",\r\n                     \"value\": \"{{tasks.step-A.outputs.parameters.output-param-1}}\"\r\n                     }\r\n                  ]}\r\n      }\r\n    ]}},\r\n    {\r\n        \"name\": \"step-template-a\",\r\n        \"inputs\":{\r\n                \"parameters\":[{\"name\": \"step-a-param-1\"}]\r\n            },\r\n        \"outputs\": {\r\n            \"parameters\":[{\"name\": \"output-param-1\",\"valueFrom\":{\"path\": \"/test.txt\"} }]\r\n            }\r\n        ,\r\n      \"script\":{\r\n        \"image\": \"alpine\",\r\n        \"command\": [\"/bin/sh\"],\r\n        \"source\": \"echo \\\"{{inputs.parameters.step-a-param-1}} \\\" >> /test.txt\"\r\n      } \r\n    },\r\n    {\r\n      \"name\": \"step-template-b\",\r\n      \"inputs\": {\r\n         \"parameters\":[{\"name\": \"step-b-param-1\"}]\r\n        },\r\n       \"outputs\":{\r\n           \"artifacts\":[{\"name\": \"output-artifact\",\"path\": \"/outputs\"}]\r\n       },\r\n     \"script\":{\r\n        \"image\": \"alpine\",\r\n        \"command\": [\"/bin/sh\"],\r\n        \"source\": \" mkdir -p /outputs && echo \\\"{{inputs.parameters.step-b-param-1}}\\\" >> /outputs/result.txt\"\r\n     }\r\n    }\r\n    ]\r\n}\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{argo-endpoint}}/workflows/argo/demo-example-l8qsk/stop",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflows",
								"argo",
								"demo-example-l8qsk",
								"stop"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Workflow",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{argo-endpoint}}/workflows/argo/demo-example-l8qsk",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflows",
								"argo",
								"demo-example-l8qsk"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HELLOWORLD-EXAMPLE",
			"item": [
				{
					"name": "Workflow",
					"item": [
						{
							"name": "LIST Workflows",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6InVwbFRKNUROR052aTZNSG1zbHFfQmVtS1RieG14eTN4Vi1GZ203SDZXUUEifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJhcmdvIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImFyZ28tdXNlci5zZXJ2aWNlLWFjY291bnQtdG9rZW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiYXJnby11c2VyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNzgxMmI0MmYtMWZjYS00ZjY2LThhN2EtMjhjMWJkYzkzMzU0Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmFyZ286YXJnby11c2VyIn0.khEZVplgz737W3aQ1vlh9v00yiTlsr46g1S7lUMlrv64Cx93dW1w-1AHQlhGXqLc3He9ptEyCUKiCORxcvyKX2DhZHCgd4D0InoUTMbMqoiDi62psFPMFgPtsBfmec1s4MFvWaqJ1V0MYHqPbY0GBfmoy2HVGCK5s85CHGqUn66uQclCWVXhJYo_XZuQMvSeLnZ9zEKAF9EhRdHXZXAQQ7OiQvxy_X7kITXUkxAZKBgZ1gDxLI7r5tYNGtemXAb4ErzAUbf_oiwy_yB5o3LPtZE5PRZ2VvL6dPSskVHtV_S6uvWSzowkxNjjpiptTfnTesuG2A6RnUPF7_zY63O4cQ",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{argo-endpoint}}/workflows/argo",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"argo"
									]
								}
							},
							"response": [
								{
									"name": "LIST Workflows",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{argo-endpoint}}/workflows/argo",
											"host": [
												"{{argo-endpoint}}"
											],
											"path": [
												"workflows",
												"argo"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Grpc-Metadata-Content-Type",
											"value": "application/grpc"
										},
										{
											"key": "X-Ratelimit-Limit",
											"value": "1000"
										},
										{
											"key": "X-Ratelimit-Remaining",
											"value": "999"
										},
										{
											"key": "X-Ratelimit-Reset",
											"value": "Wed, 10 Apr 2024 09:03:43 UTC"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Apr 2024 09:03:42 GMT"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"metadata\": {\n        \"resourceVersion\": \"43898911\"\n    },\n    \"items\": [\n        {\n            \"metadata\": {\n                \"name\": \"hello-world-2j7f9\",\n                \"generateName\": \"hello-world-\",\n                \"namespace\": \"argo\",\n                \"uid\": \"5c67235f-28ce-40ac-8984-4fa6c845eec1\",\n                \"resourceVersion\": \"43898754\",\n                \"generation\": 3,\n                \"creationTimestamp\": \"2024-04-10T08:17:34Z\",\n                \"labels\": {\n                    \"workflows.argoproj.io/completed\": \"true\",\n                    \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\",\n                    \"workflows.argoproj.io/phase\": \"Succeeded\"\n                },\n                \"annotations\": {\n                    \"workflows.argoproj.io/pod-name-format\": \"v2\"\n                },\n                \"managedFields\": [\n                    {\n                        \"manager\": \"argo\",\n                        \"operation\": \"Update\",\n                        \"apiVersion\": \"argoproj.io/v1alpha1\",\n                        \"time\": \"2024-04-10T08:17:34Z\",\n                        \"fieldsType\": \"FieldsV1\",\n                        \"fieldsV1\": {\n                            \"f:metadata\": {\n                                \"f:generateName\": {},\n                                \"f:labels\": {\n                                    \".\": {},\n                                    \"f:workflows.argoproj.io/creator\": {}\n                                }\n                            },\n                            \"f:spec\": {}\n                        }\n                    },\n                    {\n                        \"manager\": \"workflow-controller\",\n                        \"operation\": \"Update\",\n                        \"apiVersion\": \"argoproj.io/v1alpha1\",\n                        \"time\": \"2024-04-10T08:17:44Z\",\n                        \"fieldsType\": \"FieldsV1\",\n                        \"fieldsV1\": {\n                            \"f:metadata\": {\n                                \"f:annotations\": {\n                                    \".\": {},\n                                    \"f:workflows.argoproj.io/pod-name-format\": {}\n                                },\n                                \"f:labels\": {\n                                    \"f:workflows.argoproj.io/completed\": {},\n                                    \"f:workflows.argoproj.io/phase\": {}\n                                }\n                            },\n                            \"f:status\": {}\n                        }\n                    }\n                ]\n            },\n            \"spec\": {\n                \"templates\": [\n                    {\n                        \"name\": \"whalesay\",\n                        \"inputs\": {},\n                        \"outputs\": {},\n                        \"metadata\": {},\n                        \"container\": {\n                            \"name\": \"\",\n                            \"image\": \"docker/whalesay\",\n                            \"command\": [\n                                \"cowsay\"\n                            ],\n                            \"args\": [\n                                \"hello world\"\n                            ],\n                            \"resources\": {}\n                        }\n                    }\n                ],\n                \"entrypoint\": \"whalesay\",\n                \"arguments\": {}\n            },\n            \"status\": {\n                \"phase\": \"Succeeded\",\n                \"startedAt\": \"2024-04-10T09:01:51Z\",\n                \"finishedAt\": \"2024-04-10T09:02:01Z\",\n                \"progress\": \"1/1\",\n                \"nodes\": {\n                    \"hello-world-2j7f9\": {\n                        \"id\": \"hello-world-2j7f9\",\n                        \"name\": \"hello-world-2j7f9\",\n                        \"displayName\": \"hello-world-2j7f9\",\n                        \"type\": \"Pod\",\n                        \"templateName\": \"whalesay\",\n                        \"templateScope\": \"local/hello-world-2j7f9\",\n                        \"phase\": \"Succeeded\",\n                        \"startedAt\": \"2024-04-10T09:01:51Z\",\n                        \"finishedAt\": \"2024-04-10T09:02:09Z\",\n                        \"progress\": \"1/1\",\n                        \"resourcesDuration\": {\n                            \"cpu\": 5,\n                            \"memory\": 5\n                        },\n                        \"outputs\": {\n                            \"exitCode\": \"0\"\n                        },\n                        \"hostNodeName\": \"l-k8s01-node03.spb.spacebel.be\"\n                    }\n                },\n                \"conditions\": [\n                    {\n                        \"type\": \"PodRunning\",\n                        \"status\": \"False\"\n                    },\n                    {\n                        \"type\": \"Completed\",\n                        \"status\": \"True\"\n                    }\n                ],\n                \"resourcesDuration\": {\n                    \"cpu\": 5,\n                    \"memory\": 5\n                },\n                \"artifactRepositoryRef\": {\n                    \"configMap\": \"artifact-repositories\",\n                    \"key\": \"default-artifact-repository\",\n                    \"namespace\": \"argo\",\n                    \"artifactRepository\": {\n                        \"s3\": {\n                            \"endpoint\": \"172.17.20.10:30900\",\n                            \"bucket\": \"test\",\n                            \"insecure\": true,\n                            \"accessKeySecret\": {\n                                \"name\": \"my-minio-cred-new\",\n                                \"key\": \"accessKey\"\n                            },\n                            \"secretKeySecret\": {\n                                \"name\": \"my-minio-cred-new\",\n                                \"key\": \"secretKey\"\n                            }\n                        }\n                    }\n                },\n                \"artifactGCStatus\": {\n                    \"notSpecified\": true\n                },\n                \"taskResultsCompleted\": {\n                    \"hello-world-2j7f9\": true\n                }\n            }\n        },\n        {\n            \"metadata\": {\n                \"name\": \"hello-world-lf649\",\n                \"generateName\": \"hello-world-\",\n                \"namespace\": \"argo\",\n                \"uid\": \"7bb9ca5a-f4ce-4f19-830f-8e3cc1d2bae8\",\n                \"resourceVersion\": \"43898669\",\n                \"generation\": 3,\n                \"creationTimestamp\": \"2024-04-10T08:17:01Z\",\n                \"labels\": {\n                    \"workflows.argoproj.io/completed\": \"true\",\n                    \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\",\n                    \"workflows.argoproj.io/phase\": \"Succeeded\"\n                },\n                \"annotations\": {\n                    \"workflows.argoproj.io/pod-name-format\": \"v2\"\n                },\n                \"managedFields\": [\n                    {\n                        \"manager\": \"argo\",\n                        \"operation\": \"Update\",\n                        \"apiVersion\": \"argoproj.io/v1alpha1\",\n                        \"time\": \"2024-04-10T08:17:01Z\",\n                        \"fieldsType\": \"FieldsV1\",\n                        \"fieldsV1\": {\n                            \"f:metadata\": {\n                                \"f:generateName\": {},\n                                \"f:labels\": {\n                                    \".\": {},\n                                    \"f:workflows.argoproj.io/creator\": {}\n                                }\n                            },\n                            \"f:spec\": {}\n                        }\n                    },\n                    {\n                        \"manager\": \"workflow-controller\",\n                        \"operation\": \"Update\",\n                        \"apiVersion\": \"argoproj.io/v1alpha1\",\n                        \"time\": \"2024-04-10T08:17:11Z\",\n                        \"fieldsType\": \"FieldsV1\",\n                        \"fieldsV1\": {\n                            \"f:metadata\": {\n                                \"f:annotations\": {\n                                    \".\": {},\n                                    \"f:workflows.argoproj.io/pod-name-format\": {}\n                                },\n                                \"f:labels\": {\n                                    \"f:workflows.argoproj.io/completed\": {},\n                                    \"f:workflows.argoproj.io/phase\": {}\n                                }\n                            },\n                            \"f:status\": {}\n                        }\n                    }\n                ]\n            },\n            \"spec\": {\n                \"templates\": [\n                    {\n                        \"name\": \"whalesay\",\n                        \"inputs\": {},\n                        \"outputs\": {},\n                        \"metadata\": {},\n                        \"container\": {\n                            \"name\": \"\",\n                            \"image\": \"docker/whalesay\",\n                            \"command\": [\n                                \"cowsay\"\n                            ],\n                            \"args\": [\n                                \"hello world\"\n                            ],\n                            \"resources\": {}\n                        }\n                    }\n                ],\n                \"entrypoint\": \"whalesay\",\n                \"arguments\": {}\n            },\n            \"status\": {\n                \"phase\": \"Succeeded\",\n                \"startedAt\": \"2024-04-10T09:01:18Z\",\n                \"finishedAt\": \"2024-04-10T09:01:28Z\",\n                \"progress\": \"1/1\",\n                \"nodes\": {\n                    \"hello-world-lf649\": {\n                        \"id\": \"hello-world-lf649\",\n                        \"name\": \"hello-world-lf649\",\n                        \"displayName\": \"hello-world-lf649\",\n                        \"type\": \"Pod\",\n                        \"templateName\": \"whalesay\",\n                        \"templateScope\": \"local/hello-world-lf649\",\n                        \"phase\": \"Succeeded\",\n                        \"startedAt\": \"2024-04-10T09:01:18Z\",\n                        \"finishedAt\": \"2024-04-10T09:01:37Z\",\n                        \"progress\": \"1/1\",\n                        \"resourcesDuration\": {\n                            \"cpu\": 7,\n                            \"memory\": 7\n                        },\n                        \"outputs\": {\n                            \"exitCode\": \"0\"\n                        },\n                        \"hostNodeName\": \"l-k8s01-node03.spb.spacebel.be\"\n                    }\n                },\n                \"conditions\": [\n                    {\n                        \"type\": \"PodRunning\",\n                        \"status\": \"False\"\n                    },\n                    {\n                        \"type\": \"Completed\",\n                        \"status\": \"True\"\n                    }\n                ],\n                \"resourcesDuration\": {\n                    \"cpu\": 7,\n                    \"memory\": 7\n                },\n                \"artifactRepositoryRef\": {\n                    \"configMap\": \"artifact-repositories\",\n                    \"key\": \"default-artifact-repository\",\n                    \"namespace\": \"argo\",\n                    \"artifactRepository\": {\n                        \"s3\": {\n                            \"endpoint\": \"172.17.20.10:30900\",\n                            \"bucket\": \"test\",\n                            \"insecure\": true,\n                            \"accessKeySecret\": {\n                                \"name\": \"my-minio-cred-new\",\n                                \"key\": \"accessKey\"\n                            },\n                            \"secretKeySecret\": {\n                                \"name\": \"my-minio-cred-new\",\n                                \"key\": \"secretKey\"\n                            }\n                        }\n                    }\n                },\n                \"artifactGCStatus\": {\n                    \"notSpecified\": true\n                },\n                \"taskResultsCompleted\": {\n                    \"hello-world-lf649\": true\n                }\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Submit Workflow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"workflow-execution-name\", jsonData.metadata.name);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"workflow\":{\r\n  \"apiVersion\": \"argoproj.io/v1alpha1\",\r\n  \"kind\": \"Workflow\",\r\n  \"metadata\": {\r\n    \"generateName\": \"hello-world-\"\r\n  },\r\n  \"spec\": {\r\n    \"entrypoint\": \"whalesay\",\r\n    \"templates\": [\r\n      {\r\n        \"name\": \"whalesay\",\r\n        \"container\": {\r\n          \"image\": \"docker/whalesay\",\r\n          \"command\": [\r\n            \"cowsay\"\r\n          ],\r\n          \"args\": [\r\n            \"hello world\"\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Execute template",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"workflow\":{\r\n  \"apiVersion\": \"argoproj.io/v1alpha1\",\r\n  \"kind\": \"Workflow\",\r\n  \"metadata\": {\r\n    \"generateName\": \"hello-world-\"\r\n  },\r\n  \"spec\": {\r\n    \"entrypoint\": \"whalesay\",\r\n    \"templates\": [\r\n      {\r\n        \"name\": \"whalesay\",\r\n        \"container\": {\r\n          \"image\": \"docker/whalesay\",\r\n          \"command\": [\r\n            \"cowsay\"\r\n          ],\r\n          \"args\": [\r\n            \"hello world\"\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{argo-endpoint}}/workflows/{{namespace}}",
											"host": [
												"{{argo-endpoint}}"
											],
											"path": [
												"workflows",
												"{{namespace}}"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Grpc-Metadata-Content-Type",
											"value": "application/grpc"
										},
										{
											"key": "X-Ratelimit-Limit",
											"value": "1000"
										},
										{
											"key": "X-Ratelimit-Remaining",
											"value": "999"
										},
										{
											"key": "X-Ratelimit-Reset",
											"value": "Wed, 10 Apr 2024 09:02:04 UTC"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Apr 2024 09:02:03 GMT"
										},
										{
											"key": "Content-Length",
											"value": "861"
										}
									],
									"cookie": [],
									"body": "{\n    \"metadata\": {\n        \"name\": \"hello-world-2j7f9\",\n        \"generateName\": \"hello-world-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"5c67235f-28ce-40ac-8984-4fa6c845eec1\",\n        \"resourceVersion\": \"43898712\",\n        \"generation\": 1,\n        \"creationTimestamp\": \"2024-04-10T08:17:34Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T08:17:34Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:generateName\": {},\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/creator\": {}\n                        }\n                    },\n                    \"f:spec\": {},\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"templates\": [\n            {\n                \"name\": \"whalesay\",\n                \"inputs\": {},\n                \"outputs\": {},\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"docker/whalesay\",\n                    \"command\": [\n                        \"cowsay\"\n                    ],\n                    \"args\": [\n                        \"hello world\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        ],\n        \"entrypoint\": \"whalesay\",\n        \"arguments\": {}\n    },\n    \"status\": {\n        \"startedAt\": null,\n        \"finishedAt\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Get Status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}",
										"{{workflow-execution-name}}"
									]
								}
							},
							"response": [
								{
									"name": "Get Status - RUNNING",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
											"host": [
												"{{argo-endpoint}}"
											],
											"path": [
												"workflows",
												"{{namespace}}",
												"{{workflow-execution-name}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Grpc-Metadata-Content-Type",
											"value": "application/grpc"
										},
										{
											"key": "X-Ratelimit-Limit",
											"value": "1000"
										},
										{
											"key": "X-Ratelimit-Remaining",
											"value": "999"
										},
										{
											"key": "X-Ratelimit-Reset",
											"value": "Wed, 10 Apr 2024 09:02:08 UTC"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Apr 2024 09:02:07 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1975"
										}
									],
									"cookie": [],
									"body": "{\n    \"metadata\": {\n        \"name\": \"hello-world-2j7f9\",\n        \"generateName\": \"hello-world-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"5c67235f-28ce-40ac-8984-4fa6c845eec1\",\n        \"resourceVersion\": \"43898716\",\n        \"generation\": 2,\n        \"creationTimestamp\": \"2024-04-10T08:17:34Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\",\n            \"workflows.argoproj.io/phase\": \"Running\"\n        },\n        \"annotations\": {\n            \"workflows.argoproj.io/pod-name-format\": \"v2\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T08:17:34Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:generateName\": {},\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/creator\": {}\n                        }\n                    },\n                    \"f:spec\": {}\n                }\n            },\n            {\n                \"manager\": \"workflow-controller\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T08:17:34Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:annotations\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/pod-name-format\": {}\n                        },\n                        \"f:labels\": {\n                            \"f:workflows.argoproj.io/phase\": {}\n                        }\n                    },\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"templates\": [\n            {\n                \"name\": \"whalesay\",\n                \"inputs\": {},\n                \"outputs\": {},\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"docker/whalesay\",\n                    \"command\": [\n                        \"cowsay\"\n                    ],\n                    \"args\": [\n                        \"hello world\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        ],\n        \"entrypoint\": \"whalesay\",\n        \"arguments\": {}\n    },\n    \"status\": {\n        \"phase\": \"Running\",\n        \"startedAt\": \"2024-04-10T09:01:51Z\",\n        \"finishedAt\": null,\n        \"progress\": \"0/1\",\n        \"nodes\": {\n            \"hello-world-2j7f9\": {\n                \"id\": \"hello-world-2j7f9\",\n                \"name\": \"hello-world-2j7f9\",\n                \"displayName\": \"hello-world-2j7f9\",\n                \"type\": \"Pod\",\n                \"templateName\": \"whalesay\",\n                \"templateScope\": \"local/hello-world-2j7f9\",\n                \"phase\": \"Pending\",\n                \"startedAt\": \"2024-04-10T09:01:51Z\",\n                \"finishedAt\": null,\n                \"progress\": \"0/1\"\n            }\n        },\n        \"artifactRepositoryRef\": {\n            \"configMap\": \"artifact-repositories\",\n            \"key\": \"default-artifact-repository\",\n            \"namespace\": \"argo\",\n            \"artifactRepository\": {\n                \"s3\": {\n                    \"endpoint\": \"172.17.20.10:30900\",\n                    \"bucket\": \"test\",\n                    \"insecure\": true,\n                    \"accessKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"accessKey\"\n                    },\n                    \"secretKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"secretKey\"\n                    }\n                }\n            }\n        },\n        \"artifactGCStatus\": {\n            \"notSpecified\": true\n        }\n    }\n}"
								},
								{
									"name": "Get Status - SUCCEEDED",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
											"host": [
												"{{argo-endpoint}}"
											],
											"path": [
												"workflows",
												"{{namespace}}",
												"{{workflow-execution-name}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Grpc-Metadata-Content-Type",
											"value": "application/grpc"
										},
										{
											"key": "X-Ratelimit-Limit",
											"value": "1000"
										},
										{
											"key": "X-Ratelimit-Remaining",
											"value": "999"
										},
										{
											"key": "X-Ratelimit-Reset",
											"value": "Wed, 10 Apr 2024 09:02:20 UTC"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Apr 2024 09:02:19 GMT"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"metadata\": {\n        \"name\": \"hello-world-2j7f9\",\n        \"generateName\": \"hello-world-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"5c67235f-28ce-40ac-8984-4fa6c845eec1\",\n        \"resourceVersion\": \"43898754\",\n        \"generation\": 3,\n        \"creationTimestamp\": \"2024-04-10T08:17:34Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/completed\": \"true\",\n            \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\",\n            \"workflows.argoproj.io/phase\": \"Succeeded\"\n        },\n        \"annotations\": {\n            \"workflows.argoproj.io/pod-name-format\": \"v2\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T08:17:34Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:generateName\": {},\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/creator\": {}\n                        }\n                    },\n                    \"f:spec\": {}\n                }\n            },\n            {\n                \"manager\": \"workflow-controller\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T08:17:44Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:annotations\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/pod-name-format\": {}\n                        },\n                        \"f:labels\": {\n                            \"f:workflows.argoproj.io/completed\": {},\n                            \"f:workflows.argoproj.io/phase\": {}\n                        }\n                    },\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"templates\": [\n            {\n                \"name\": \"whalesay\",\n                \"inputs\": {},\n                \"outputs\": {},\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"docker/whalesay\",\n                    \"command\": [\n                        \"cowsay\"\n                    ],\n                    \"args\": [\n                        \"hello world\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        ],\n        \"entrypoint\": \"whalesay\",\n        \"arguments\": {}\n    },\n    \"status\": {\n        \"phase\": \"Succeeded\",\n        \"startedAt\": \"2024-04-10T09:01:51Z\",\n        \"finishedAt\": \"2024-04-10T09:02:01Z\",\n        \"progress\": \"1/1\",\n        \"nodes\": {\n            \"hello-world-2j7f9\": {\n                \"id\": \"hello-world-2j7f9\",\n                \"name\": \"hello-world-2j7f9\",\n                \"displayName\": \"hello-world-2j7f9\",\n                \"type\": \"Pod\",\n                \"templateName\": \"whalesay\",\n                \"templateScope\": \"local/hello-world-2j7f9\",\n                \"phase\": \"Succeeded\",\n                \"startedAt\": \"2024-04-10T09:01:51Z\",\n                \"finishedAt\": \"2024-04-10T09:02:09Z\",\n                \"progress\": \"1/1\",\n                \"resourcesDuration\": {\n                    \"cpu\": 5,\n                    \"memory\": 5\n                },\n                \"outputs\": {\n                    \"exitCode\": \"0\"\n                },\n                \"hostNodeName\": \"l-k8s01-node03.spb.spacebel.be\"\n            }\n        },\n        \"conditions\": [\n            {\n                \"type\": \"PodRunning\",\n                \"status\": \"False\"\n            },\n            {\n                \"type\": \"Completed\",\n                \"status\": \"True\"\n            }\n        ],\n        \"resourcesDuration\": {\n            \"cpu\": 5,\n            \"memory\": 5\n        },\n        \"artifactRepositoryRef\": {\n            \"configMap\": \"artifact-repositories\",\n            \"key\": \"default-artifact-repository\",\n            \"namespace\": \"argo\",\n            \"artifactRepository\": {\n                \"s3\": {\n                    \"endpoint\": \"172.17.20.10:30900\",\n                    \"bucket\": \"test\",\n                    \"insecure\": true,\n                    \"accessKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"accessKey\"\n                    },\n                    \"secretKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"secretKey\"\n                    }\n                }\n            }\n        },\n        \"artifactGCStatus\": {\n            \"notSpecified\": true\n        },\n        \"taskResultsCompleted\": {\n            \"hello-world-2j7f9\": true\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get LOGS",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}/log?logOptions.container=main",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}",
										"{{workflow-execution-name}}",
										"log"
									],
									"query": [
										{
											"key": "logOptions.container",
											"value": "main"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get LOGS",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}/log?logOptions.container=main",
											"host": [
												"{{argo-endpoint}}"
											],
											"path": [
												"workflows",
												"{{namespace}}",
												"{{workflow-execution-name}}",
												"log"
											],
											"query": [
												{
													"key": "logOptions.container",
													"value": "main"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Grpc-Metadata-Content-Type",
											"value": "application/grpc"
										},
										{
											"key": "X-Ratelimit-Limit",
											"value": "1000"
										},
										{
											"key": "X-Ratelimit-Remaining",
											"value": "999"
										},
										{
											"key": "X-Ratelimit-Reset",
											"value": "Wed, 10 Apr 2024 09:03:28 UTC"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Apr 2024 09:03:27 GMT"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\"result\":{\"content\":\" _____________ \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"\\u003c hello world \\u003e\",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\" ------------- \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"    \\\\\",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"     \\\\\",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"      \\\\     \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"                    ##        .            \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"              ## ## ##       ==            \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"           ## ## ## ##      ===            \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"       /\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"___/ ===        \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"  ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~   \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"       \\\\______ o          __/            \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"        \\\\    \\\\        __/             \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"          \\\\____\\\\______/   \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"time=\\\"2024-04-10T09:02:08.664Z\\\" level=info msg=\\\"sub-process exited\\\" argo=true error=\\\"\\u003cnil\\u003e\\\"\",\"podName\":\"hello-world-2j7f9\"}}\n"
								}
							]
						},
						{
							"name": "DELETE Workflow",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}",
										"{{workflow-execution-name}}"
									]
								}
							},
							"response": [
								{
									"name": "DELETE Workflow",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
											"host": [
												"{{argo-endpoint}}"
											],
											"path": [
												"workflows",
												"{{namespace}}",
												"{{workflow-execution-name}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Grpc-Metadata-Content-Type",
											"value": "application/grpc"
										},
										{
											"key": "X-Ratelimit-Limit",
											"value": "1000"
										},
										{
											"key": "X-Ratelimit-Remaining",
											"value": "999"
										},
										{
											"key": "X-Ratelimit-Reset",
											"value": "Wed, 10 Apr 2024 09:04:13 UTC"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Apr 2024 09:04:12 GMT"
										},
										{
											"key": "Content-Length",
											"value": "2"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "HELLOWORLD-TEMPLATE-EXAMPLE",
			"item": [
				{
					"name": "Template",
					"item": [
						{
							"name": "CREATE Workflow Template",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"template\": \r\n    {\r\n    \"apiVersion\": \"argoproj.io/v1alpha1\",\r\n    \"kind\": \"WorkflowTemplate\",\r\n    \"metadata\": {\r\n        \"name\": \"hello-world-wft\"\r\n    },\r\n    \"spec\": {\r\n        \"entrypoint\": \"whalesay\",\r\n        \"templates\": [\r\n        {\r\n            \"name\": \"whalesay\",\r\n            \"inputs\": {\r\n            \"parameters\": [\r\n                {\r\n                \"name\": \"message\"\r\n                }\r\n            ]\r\n            },\r\n            \"container\": {\r\n            \"image\": \"docker/whalesay\",\r\n            \"command\": [\r\n                \"cowsay\"\r\n            ],\r\n            \"args\": [\r\n                \"{{inputs.parameters.message}}\"\r\n            ]\r\n            }\r\n        }\r\n        ]\r\n    }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{argo-endpoint}}/workflow-templates/{{namespace}}",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflow-templates",
										"{{namespace}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Workflow",
					"item": [
						{
							"name": "LIST Workflows",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6InVwbFRKNUROR052aTZNSG1zbHFfQmVtS1RieG14eTN4Vi1GZ203SDZXUUEifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJhcmdvIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImFyZ28tdXNlci5zZXJ2aWNlLWFjY291bnQtdG9rZW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiYXJnby11c2VyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNzgxMmI0MmYtMWZjYS00ZjY2LThhN2EtMjhjMWJkYzkzMzU0Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmFyZ286YXJnby11c2VyIn0.khEZVplgz737W3aQ1vlh9v00yiTlsr46g1S7lUMlrv64Cx93dW1w-1AHQlhGXqLc3He9ptEyCUKiCORxcvyKX2DhZHCgd4D0InoUTMbMqoiDi62psFPMFgPtsBfmec1s4MFvWaqJ1V0MYHqPbY0GBfmoy2HVGCK5s85CHGqUn66uQclCWVXhJYo_XZuQMvSeLnZ9zEKAF9EhRdHXZXAQQ7OiQvxy_X7kITXUkxAZKBgZ1gDxLI7r5tYNGtemXAb4ErzAUbf_oiwy_yB5o3LPtZE5PRZ2VvL6dPSskVHtV_S6uvWSzowkxNjjpiptTfnTesuG2A6RnUPF7_zY63O4cQ",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{argo-endpoint}}/workflows/argo",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"argo"
									]
								}
							},
							"response": [
								{
									"name": "LIST Workflows",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{argo-endpoint}}/workflows/argo",
											"host": [
												"{{argo-endpoint}}"
											],
											"path": [
												"workflows",
												"argo"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Grpc-Metadata-Content-Type",
											"value": "application/grpc"
										},
										{
											"key": "X-Ratelimit-Limit",
											"value": "1000"
										},
										{
											"key": "X-Ratelimit-Remaining",
											"value": "999"
										},
										{
											"key": "X-Ratelimit-Reset",
											"value": "Wed, 10 Apr 2024 09:03:43 UTC"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Apr 2024 09:03:42 GMT"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"metadata\": {\n        \"resourceVersion\": \"43898911\"\n    },\n    \"items\": [\n        {\n            \"metadata\": {\n                \"name\": \"hello-world-2j7f9\",\n                \"generateName\": \"hello-world-\",\n                \"namespace\": \"argo\",\n                \"uid\": \"5c67235f-28ce-40ac-8984-4fa6c845eec1\",\n                \"resourceVersion\": \"43898754\",\n                \"generation\": 3,\n                \"creationTimestamp\": \"2024-04-10T08:17:34Z\",\n                \"labels\": {\n                    \"workflows.argoproj.io/completed\": \"true\",\n                    \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\",\n                    \"workflows.argoproj.io/phase\": \"Succeeded\"\n                },\n                \"annotations\": {\n                    \"workflows.argoproj.io/pod-name-format\": \"v2\"\n                },\n                \"managedFields\": [\n                    {\n                        \"manager\": \"argo\",\n                        \"operation\": \"Update\",\n                        \"apiVersion\": \"argoproj.io/v1alpha1\",\n                        \"time\": \"2024-04-10T08:17:34Z\",\n                        \"fieldsType\": \"FieldsV1\",\n                        \"fieldsV1\": {\n                            \"f:metadata\": {\n                                \"f:generateName\": {},\n                                \"f:labels\": {\n                                    \".\": {},\n                                    \"f:workflows.argoproj.io/creator\": {}\n                                }\n                            },\n                            \"f:spec\": {}\n                        }\n                    },\n                    {\n                        \"manager\": \"workflow-controller\",\n                        \"operation\": \"Update\",\n                        \"apiVersion\": \"argoproj.io/v1alpha1\",\n                        \"time\": \"2024-04-10T08:17:44Z\",\n                        \"fieldsType\": \"FieldsV1\",\n                        \"fieldsV1\": {\n                            \"f:metadata\": {\n                                \"f:annotations\": {\n                                    \".\": {},\n                                    \"f:workflows.argoproj.io/pod-name-format\": {}\n                                },\n                                \"f:labels\": {\n                                    \"f:workflows.argoproj.io/completed\": {},\n                                    \"f:workflows.argoproj.io/phase\": {}\n                                }\n                            },\n                            \"f:status\": {}\n                        }\n                    }\n                ]\n            },\n            \"spec\": {\n                \"templates\": [\n                    {\n                        \"name\": \"whalesay\",\n                        \"inputs\": {},\n                        \"outputs\": {},\n                        \"metadata\": {},\n                        \"container\": {\n                            \"name\": \"\",\n                            \"image\": \"docker/whalesay\",\n                            \"command\": [\n                                \"cowsay\"\n                            ],\n                            \"args\": [\n                                \"hello world\"\n                            ],\n                            \"resources\": {}\n                        }\n                    }\n                ],\n                \"entrypoint\": \"whalesay\",\n                \"arguments\": {}\n            },\n            \"status\": {\n                \"phase\": \"Succeeded\",\n                \"startedAt\": \"2024-04-10T09:01:51Z\",\n                \"finishedAt\": \"2024-04-10T09:02:01Z\",\n                \"progress\": \"1/1\",\n                \"nodes\": {\n                    \"hello-world-2j7f9\": {\n                        \"id\": \"hello-world-2j7f9\",\n                        \"name\": \"hello-world-2j7f9\",\n                        \"displayName\": \"hello-world-2j7f9\",\n                        \"type\": \"Pod\",\n                        \"templateName\": \"whalesay\",\n                        \"templateScope\": \"local/hello-world-2j7f9\",\n                        \"phase\": \"Succeeded\",\n                        \"startedAt\": \"2024-04-10T09:01:51Z\",\n                        \"finishedAt\": \"2024-04-10T09:02:09Z\",\n                        \"progress\": \"1/1\",\n                        \"resourcesDuration\": {\n                            \"cpu\": 5,\n                            \"memory\": 5\n                        },\n                        \"outputs\": {\n                            \"exitCode\": \"0\"\n                        },\n                        \"hostNodeName\": \"l-k8s01-node03.spb.spacebel.be\"\n                    }\n                },\n                \"conditions\": [\n                    {\n                        \"type\": \"PodRunning\",\n                        \"status\": \"False\"\n                    },\n                    {\n                        \"type\": \"Completed\",\n                        \"status\": \"True\"\n                    }\n                ],\n                \"resourcesDuration\": {\n                    \"cpu\": 5,\n                    \"memory\": 5\n                },\n                \"artifactRepositoryRef\": {\n                    \"configMap\": \"artifact-repositories\",\n                    \"key\": \"default-artifact-repository\",\n                    \"namespace\": \"argo\",\n                    \"artifactRepository\": {\n                        \"s3\": {\n                            \"endpoint\": \"172.17.20.10:30900\",\n                            \"bucket\": \"test\",\n                            \"insecure\": true,\n                            \"accessKeySecret\": {\n                                \"name\": \"my-minio-cred-new\",\n                                \"key\": \"accessKey\"\n                            },\n                            \"secretKeySecret\": {\n                                \"name\": \"my-minio-cred-new\",\n                                \"key\": \"secretKey\"\n                            }\n                        }\n                    }\n                },\n                \"artifactGCStatus\": {\n                    \"notSpecified\": true\n                },\n                \"taskResultsCompleted\": {\n                    \"hello-world-2j7f9\": true\n                }\n            }\n        },\n        {\n            \"metadata\": {\n                \"name\": \"hello-world-lf649\",\n                \"generateName\": \"hello-world-\",\n                \"namespace\": \"argo\",\n                \"uid\": \"7bb9ca5a-f4ce-4f19-830f-8e3cc1d2bae8\",\n                \"resourceVersion\": \"43898669\",\n                \"generation\": 3,\n                \"creationTimestamp\": \"2024-04-10T08:17:01Z\",\n                \"labels\": {\n                    \"workflows.argoproj.io/completed\": \"true\",\n                    \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\",\n                    \"workflows.argoproj.io/phase\": \"Succeeded\"\n                },\n                \"annotations\": {\n                    \"workflows.argoproj.io/pod-name-format\": \"v2\"\n                },\n                \"managedFields\": [\n                    {\n                        \"manager\": \"argo\",\n                        \"operation\": \"Update\",\n                        \"apiVersion\": \"argoproj.io/v1alpha1\",\n                        \"time\": \"2024-04-10T08:17:01Z\",\n                        \"fieldsType\": \"FieldsV1\",\n                        \"fieldsV1\": {\n                            \"f:metadata\": {\n                                \"f:generateName\": {},\n                                \"f:labels\": {\n                                    \".\": {},\n                                    \"f:workflows.argoproj.io/creator\": {}\n                                }\n                            },\n                            \"f:spec\": {}\n                        }\n                    },\n                    {\n                        \"manager\": \"workflow-controller\",\n                        \"operation\": \"Update\",\n                        \"apiVersion\": \"argoproj.io/v1alpha1\",\n                        \"time\": \"2024-04-10T08:17:11Z\",\n                        \"fieldsType\": \"FieldsV1\",\n                        \"fieldsV1\": {\n                            \"f:metadata\": {\n                                \"f:annotations\": {\n                                    \".\": {},\n                                    \"f:workflows.argoproj.io/pod-name-format\": {}\n                                },\n                                \"f:labels\": {\n                                    \"f:workflows.argoproj.io/completed\": {},\n                                    \"f:workflows.argoproj.io/phase\": {}\n                                }\n                            },\n                            \"f:status\": {}\n                        }\n                    }\n                ]\n            },\n            \"spec\": {\n                \"templates\": [\n                    {\n                        \"name\": \"whalesay\",\n                        \"inputs\": {},\n                        \"outputs\": {},\n                        \"metadata\": {},\n                        \"container\": {\n                            \"name\": \"\",\n                            \"image\": \"docker/whalesay\",\n                            \"command\": [\n                                \"cowsay\"\n                            ],\n                            \"args\": [\n                                \"hello world\"\n                            ],\n                            \"resources\": {}\n                        }\n                    }\n                ],\n                \"entrypoint\": \"whalesay\",\n                \"arguments\": {}\n            },\n            \"status\": {\n                \"phase\": \"Succeeded\",\n                \"startedAt\": \"2024-04-10T09:01:18Z\",\n                \"finishedAt\": \"2024-04-10T09:01:28Z\",\n                \"progress\": \"1/1\",\n                \"nodes\": {\n                    \"hello-world-lf649\": {\n                        \"id\": \"hello-world-lf649\",\n                        \"name\": \"hello-world-lf649\",\n                        \"displayName\": \"hello-world-lf649\",\n                        \"type\": \"Pod\",\n                        \"templateName\": \"whalesay\",\n                        \"templateScope\": \"local/hello-world-lf649\",\n                        \"phase\": \"Succeeded\",\n                        \"startedAt\": \"2024-04-10T09:01:18Z\",\n                        \"finishedAt\": \"2024-04-10T09:01:37Z\",\n                        \"progress\": \"1/1\",\n                        \"resourcesDuration\": {\n                            \"cpu\": 7,\n                            \"memory\": 7\n                        },\n                        \"outputs\": {\n                            \"exitCode\": \"0\"\n                        },\n                        \"hostNodeName\": \"l-k8s01-node03.spb.spacebel.be\"\n                    }\n                },\n                \"conditions\": [\n                    {\n                        \"type\": \"PodRunning\",\n                        \"status\": \"False\"\n                    },\n                    {\n                        \"type\": \"Completed\",\n                        \"status\": \"True\"\n                    }\n                ],\n                \"resourcesDuration\": {\n                    \"cpu\": 7,\n                    \"memory\": 7\n                },\n                \"artifactRepositoryRef\": {\n                    \"configMap\": \"artifact-repositories\",\n                    \"key\": \"default-artifact-repository\",\n                    \"namespace\": \"argo\",\n                    \"artifactRepository\": {\n                        \"s3\": {\n                            \"endpoint\": \"172.17.20.10:30900\",\n                            \"bucket\": \"test\",\n                            \"insecure\": true,\n                            \"accessKeySecret\": {\n                                \"name\": \"my-minio-cred-new\",\n                                \"key\": \"accessKey\"\n                            },\n                            \"secretKeySecret\": {\n                                \"name\": \"my-minio-cred-new\",\n                                \"key\": \"secretKey\"\n                            }\n                        }\n                    }\n                },\n                \"artifactGCStatus\": {\n                    \"notSpecified\": true\n                },\n                \"taskResultsCompleted\": {\n                    \"hello-world-lf649\": true\n                }\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Submit Workflow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"workflow-execution-name\", jsonData.metadata.name);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"namespace\": \"{{namespace}}\",\r\n\"workflow\":{\r\n  \"apiVersion\": \"argoproj.io/v1alpha1\",\r\n  \"kind\": \"Workflow\",\r\n  \"metadata\": {\r\n    \"generateName\": \"hello-world-\"\r\n  },\r\n  \"spec\": {\r\n    \"entrypoint\": \"main\",\r\n    \"arguments\":  {\"parameters\":[{\"name\": \"message\",\"value\":\"hello !\" }]},\r\n    \"workflowTemplateRef\":{\"name\": \"hello-world-wft\"}\r\n  }\r\n}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Execute template",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\"workflow\":{\r\n  \"apiVersion\": \"argoproj.io/v1alpha1\",\r\n  \"kind\": \"Workflow\",\r\n  \"metadata\": {\r\n    \"generateName\": \"hello-world-\"\r\n  },\r\n  \"spec\": {\r\n    \"entrypoint\": \"whalesay\",\r\n    \"templates\": [\r\n      {\r\n        \"name\": \"whalesay\",\r\n        \"container\": {\r\n          \"image\": \"docker/whalesay\",\r\n          \"command\": [\r\n            \"cowsay\"\r\n          ],\r\n          \"args\": [\r\n            \"hello world\"\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{argo-endpoint}}/workflows/{{namespace}}",
											"host": [
												"{{argo-endpoint}}"
											],
											"path": [
												"workflows",
												"{{namespace}}"
											],
											"query": [
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Grpc-Metadata-Content-Type",
											"value": "application/grpc"
										},
										{
											"key": "X-Ratelimit-Limit",
											"value": "1000"
										},
										{
											"key": "X-Ratelimit-Remaining",
											"value": "999"
										},
										{
											"key": "X-Ratelimit-Reset",
											"value": "Wed, 10 Apr 2024 09:02:04 UTC"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Apr 2024 09:02:03 GMT"
										},
										{
											"key": "Content-Length",
											"value": "861"
										}
									],
									"cookie": [],
									"body": "{\n    \"metadata\": {\n        \"name\": \"hello-world-2j7f9\",\n        \"generateName\": \"hello-world-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"5c67235f-28ce-40ac-8984-4fa6c845eec1\",\n        \"resourceVersion\": \"43898712\",\n        \"generation\": 1,\n        \"creationTimestamp\": \"2024-04-10T08:17:34Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T08:17:34Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:generateName\": {},\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/creator\": {}\n                        }\n                    },\n                    \"f:spec\": {},\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"templates\": [\n            {\n                \"name\": \"whalesay\",\n                \"inputs\": {},\n                \"outputs\": {},\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"docker/whalesay\",\n                    \"command\": [\n                        \"cowsay\"\n                    ],\n                    \"args\": [\n                        \"hello world\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        ],\n        \"entrypoint\": \"whalesay\",\n        \"arguments\": {}\n    },\n    \"status\": {\n        \"startedAt\": null,\n        \"finishedAt\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Get Status",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}",
										"{{workflow-execution-name}}"
									]
								}
							},
							"response": [
								{
									"name": "Get Status - RUNNING",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
											"host": [
												"{{argo-endpoint}}"
											],
											"path": [
												"workflows",
												"{{namespace}}",
												"{{workflow-execution-name}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Grpc-Metadata-Content-Type",
											"value": "application/grpc"
										},
										{
											"key": "X-Ratelimit-Limit",
											"value": "1000"
										},
										{
											"key": "X-Ratelimit-Remaining",
											"value": "999"
										},
										{
											"key": "X-Ratelimit-Reset",
											"value": "Wed, 10 Apr 2024 09:02:08 UTC"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Apr 2024 09:02:07 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1975"
										}
									],
									"cookie": [],
									"body": "{\n    \"metadata\": {\n        \"name\": \"hello-world-2j7f9\",\n        \"generateName\": \"hello-world-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"5c67235f-28ce-40ac-8984-4fa6c845eec1\",\n        \"resourceVersion\": \"43898716\",\n        \"generation\": 2,\n        \"creationTimestamp\": \"2024-04-10T08:17:34Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\",\n            \"workflows.argoproj.io/phase\": \"Running\"\n        },\n        \"annotations\": {\n            \"workflows.argoproj.io/pod-name-format\": \"v2\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T08:17:34Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:generateName\": {},\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/creator\": {}\n                        }\n                    },\n                    \"f:spec\": {}\n                }\n            },\n            {\n                \"manager\": \"workflow-controller\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T08:17:34Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:annotations\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/pod-name-format\": {}\n                        },\n                        \"f:labels\": {\n                            \"f:workflows.argoproj.io/phase\": {}\n                        }\n                    },\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"templates\": [\n            {\n                \"name\": \"whalesay\",\n                \"inputs\": {},\n                \"outputs\": {},\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"docker/whalesay\",\n                    \"command\": [\n                        \"cowsay\"\n                    ],\n                    \"args\": [\n                        \"hello world\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        ],\n        \"entrypoint\": \"whalesay\",\n        \"arguments\": {}\n    },\n    \"status\": {\n        \"phase\": \"Running\",\n        \"startedAt\": \"2024-04-10T09:01:51Z\",\n        \"finishedAt\": null,\n        \"progress\": \"0/1\",\n        \"nodes\": {\n            \"hello-world-2j7f9\": {\n                \"id\": \"hello-world-2j7f9\",\n                \"name\": \"hello-world-2j7f9\",\n                \"displayName\": \"hello-world-2j7f9\",\n                \"type\": \"Pod\",\n                \"templateName\": \"whalesay\",\n                \"templateScope\": \"local/hello-world-2j7f9\",\n                \"phase\": \"Pending\",\n                \"startedAt\": \"2024-04-10T09:01:51Z\",\n                \"finishedAt\": null,\n                \"progress\": \"0/1\"\n            }\n        },\n        \"artifactRepositoryRef\": {\n            \"configMap\": \"artifact-repositories\",\n            \"key\": \"default-artifact-repository\",\n            \"namespace\": \"argo\",\n            \"artifactRepository\": {\n                \"s3\": {\n                    \"endpoint\": \"172.17.20.10:30900\",\n                    \"bucket\": \"test\",\n                    \"insecure\": true,\n                    \"accessKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"accessKey\"\n                    },\n                    \"secretKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"secretKey\"\n                    }\n                }\n            }\n        },\n        \"artifactGCStatus\": {\n            \"notSpecified\": true\n        }\n    }\n}"
								},
								{
									"name": "Get Status - SUCCEEDED",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
											"host": [
												"{{argo-endpoint}}"
											],
											"path": [
												"workflows",
												"{{namespace}}",
												"{{workflow-execution-name}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Grpc-Metadata-Content-Type",
											"value": "application/grpc"
										},
										{
											"key": "X-Ratelimit-Limit",
											"value": "1000"
										},
										{
											"key": "X-Ratelimit-Remaining",
											"value": "999"
										},
										{
											"key": "X-Ratelimit-Reset",
											"value": "Wed, 10 Apr 2024 09:02:20 UTC"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Apr 2024 09:02:19 GMT"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"metadata\": {\n        \"name\": \"hello-world-2j7f9\",\n        \"generateName\": \"hello-world-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"5c67235f-28ce-40ac-8984-4fa6c845eec1\",\n        \"resourceVersion\": \"43898754\",\n        \"generation\": 3,\n        \"creationTimestamp\": \"2024-04-10T08:17:34Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/completed\": \"true\",\n            \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\",\n            \"workflows.argoproj.io/phase\": \"Succeeded\"\n        },\n        \"annotations\": {\n            \"workflows.argoproj.io/pod-name-format\": \"v2\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T08:17:34Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:generateName\": {},\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/creator\": {}\n                        }\n                    },\n                    \"f:spec\": {}\n                }\n            },\n            {\n                \"manager\": \"workflow-controller\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T08:17:44Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:annotations\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/pod-name-format\": {}\n                        },\n                        \"f:labels\": {\n                            \"f:workflows.argoproj.io/completed\": {},\n                            \"f:workflows.argoproj.io/phase\": {}\n                        }\n                    },\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"templates\": [\n            {\n                \"name\": \"whalesay\",\n                \"inputs\": {},\n                \"outputs\": {},\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"docker/whalesay\",\n                    \"command\": [\n                        \"cowsay\"\n                    ],\n                    \"args\": [\n                        \"hello world\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        ],\n        \"entrypoint\": \"whalesay\",\n        \"arguments\": {}\n    },\n    \"status\": {\n        \"phase\": \"Succeeded\",\n        \"startedAt\": \"2024-04-10T09:01:51Z\",\n        \"finishedAt\": \"2024-04-10T09:02:01Z\",\n        \"progress\": \"1/1\",\n        \"nodes\": {\n            \"hello-world-2j7f9\": {\n                \"id\": \"hello-world-2j7f9\",\n                \"name\": \"hello-world-2j7f9\",\n                \"displayName\": \"hello-world-2j7f9\",\n                \"type\": \"Pod\",\n                \"templateName\": \"whalesay\",\n                \"templateScope\": \"local/hello-world-2j7f9\",\n                \"phase\": \"Succeeded\",\n                \"startedAt\": \"2024-04-10T09:01:51Z\",\n                \"finishedAt\": \"2024-04-10T09:02:09Z\",\n                \"progress\": \"1/1\",\n                \"resourcesDuration\": {\n                    \"cpu\": 5,\n                    \"memory\": 5\n                },\n                \"outputs\": {\n                    \"exitCode\": \"0\"\n                },\n                \"hostNodeName\": \"l-k8s01-node03.spb.spacebel.be\"\n            }\n        },\n        \"conditions\": [\n            {\n                \"type\": \"PodRunning\",\n                \"status\": \"False\"\n            },\n            {\n                \"type\": \"Completed\",\n                \"status\": \"True\"\n            }\n        ],\n        \"resourcesDuration\": {\n            \"cpu\": 5,\n            \"memory\": 5\n        },\n        \"artifactRepositoryRef\": {\n            \"configMap\": \"artifact-repositories\",\n            \"key\": \"default-artifact-repository\",\n            \"namespace\": \"argo\",\n            \"artifactRepository\": {\n                \"s3\": {\n                    \"endpoint\": \"172.17.20.10:30900\",\n                    \"bucket\": \"test\",\n                    \"insecure\": true,\n                    \"accessKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"accessKey\"\n                    },\n                    \"secretKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"secretKey\"\n                    }\n                }\n            }\n        },\n        \"artifactGCStatus\": {\n            \"notSpecified\": true\n        },\n        \"taskResultsCompleted\": {\n            \"hello-world-2j7f9\": true\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get LOGS",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}/log?logOptions.container=main",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}",
										"{{workflow-execution-name}}",
										"log"
									],
									"query": [
										{
											"key": "logOptions.container",
											"value": "main"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get LOGS",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}/log?logOptions.container=main",
											"host": [
												"{{argo-endpoint}}"
											],
											"path": [
												"workflows",
												"{{namespace}}",
												"{{workflow-execution-name}}",
												"log"
											],
											"query": [
												{
													"key": "logOptions.container",
													"value": "main"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Grpc-Metadata-Content-Type",
											"value": "application/grpc"
										},
										{
											"key": "X-Ratelimit-Limit",
											"value": "1000"
										},
										{
											"key": "X-Ratelimit-Remaining",
											"value": "999"
										},
										{
											"key": "X-Ratelimit-Reset",
											"value": "Wed, 10 Apr 2024 09:03:28 UTC"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Apr 2024 09:03:27 GMT"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\"result\":{\"content\":\" _____________ \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"\\u003c hello world \\u003e\",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\" ------------- \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"    \\\\\",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"     \\\\\",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"      \\\\     \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"                    ##        .            \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"              ## ## ##       ==            \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"           ## ## ## ##      ===            \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"       /\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"___/ ===        \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"  ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~   \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"       \\\\______ o          __/            \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"        \\\\    \\\\        __/             \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"          \\\\____\\\\______/   \",\"podName\":\"hello-world-2j7f9\"}}\n{\"result\":{\"content\":\"time=\\\"2024-04-10T09:02:08.664Z\\\" level=info msg=\\\"sub-process exited\\\" argo=true error=\\\"\\u003cnil\\u003e\\\"\",\"podName\":\"hello-world-2j7f9\"}}\n"
								}
							]
						},
						{
							"name": "DELETE Workflow",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}",
										"{{workflow-execution-name}}"
									]
								}
							},
							"response": [
								{
									"name": "DELETE Workflow",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
											"host": [
												"{{argo-endpoint}}"
											],
											"path": [
												"workflows",
												"{{namespace}}",
												"{{workflow-execution-name}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Grpc-Metadata-Content-Type",
											"value": "application/grpc"
										},
										{
											"key": "X-Ratelimit-Limit",
											"value": "1000"
										},
										{
											"key": "X-Ratelimit-Remaining",
											"value": "999"
										},
										{
											"key": "X-Ratelimit-Reset",
											"value": "Wed, 10 Apr 2024 09:04:13 UTC"
										},
										{
											"key": "Date",
											"value": "Wed, 10 Apr 2024 09:04:12 GMT"
										},
										{
											"key": "Content-Length",
											"value": "2"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "ARTIFACT-EXAMPLE",
			"item": [
				{
					"name": "CREATE Workflow Template",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"template\":{\r\n  \"apiVersion\": \"argoproj.io/v1alpha1\",\r\n  \"kind\": \"WorkflowTemplate\",\r\n  \"metadata\": {\r\n    \"name\": \"artifact-consumer-wft\"\r\n  },\r\n  \"spec\": {\r\n    \"entrypoint\": \"process-artifact\",\r\n    \"templates\": [\r\n      {\r\n        \"name\": \"process-artifact\",\r\n        \"inputs\": {\r\n          \"parameters\": [\r\n            {\r\n              \"name\": \"source-path\"\r\n            },\r\n            {\r\n              \"name\": \"target-path\"\r\n            }\r\n          ],\r\n          \"artifacts\": [\r\n            {\r\n              \"name\": \"input-file\",\r\n              \"path\": \"/tmp/input-file\",\r\n              \"s3\": {\r\n                \"key\": \"{{inputs.parameters.source-path}}\"\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        \"outputs\": {\r\n          \"artifacts\": [\r\n            {\r\n              \"name\": \"output-file\",\r\n              \"path\": \"/tmp/output-file.txt\",\r\n              \"archive\": {\r\n                \"none\": {}\r\n              },\r\n              \"s3\": {\r\n                \"key\": \"{{inputs.parameters.target-path}}\"\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        \"container\": {\r\n          \"image\": \"argoproj/argosay:v2\",\r\n          \"command\": [\r\n            \"sh\",\r\n            \"-c\"\r\n          ],\r\n          \"args\": [\r\n            \"ls -lh /tmp/input-file >> /tmp/output-file.txt\"\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{argo-endpoint}}/workflow-templates/{{namespace}}",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflow-templates",
								"{{namespace}}"
							]
						}
					},
					"response": [
						{
							"name": "CREATE Workflow Template",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"template\":{\r\n  \"apiVersion\": \"argoproj.io/v1alpha1\",\r\n  \"kind\": \"WorkflowTemplate\",\r\n  \"metadata\": {\r\n    \"name\": \"artifact-consumer-wft\"\r\n  },\r\n  \"spec\": {\r\n    \"entrypoint\": \"process-artifact\",\r\n    \"templates\": [\r\n      {\r\n        \"name\": \"process-artifact\",\r\n        \"inputs\": {\r\n          \"parameters\": [\r\n            {\r\n              \"name\": \"source-path\"\r\n            },\r\n            {\r\n              \"name\": \"target-path\"\r\n            }\r\n          ],\r\n          \"artifacts\": [\r\n            {\r\n              \"name\": \"input-file\",\r\n              \"path\": \"/tmp/input-file\",\r\n              \"s3\": {\r\n                \"key\": \"{{inputs.parameters.source-path}}\"\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        \"outputs\": {\r\n          \"artifacts\": [\r\n            {\r\n              \"name\": \"output-file\",\r\n              \"path\": \"/tmp/output-file.txt\",\r\n              \"archive\": {\r\n                \"none\": {}\r\n              },\r\n              \"s3\": {\r\n                \"key\": \"{{inputs.parameters.target-path}}\"\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        \"container\": {\r\n          \"image\": \"argoproj/argosay:v2\",\r\n          \"command\": [\r\n            \"sh\",\r\n            \"-c\"\r\n          ],\r\n          \"args\": [\r\n            \"ls -lh /tmp/input-file >> /tmp/output-file.txt\"\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n  \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{argo-endpoint}}/workflow-templates/{{namespace}}",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflow-templates",
										"{{namespace}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Grpc-Metadata-Content-Type",
									"value": "application/grpc"
								},
								{
									"key": "X-Ratelimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-Ratelimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-Ratelimit-Reset",
									"value": "Wed, 10 Apr 2024 14:03:12 UTC"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Apr 2024 14:03:12 GMT"
								},
								{
									"key": "Content-Length",
									"value": "1128"
								}
							],
							"cookie": [],
							"body": "{\n    \"metadata\": {\n        \"name\": \"artifact-consumer-wft\",\n        \"namespace\": \"argo\",\n        \"uid\": \"404de878-393b-4935-b8ba-b076212d13a1\",\n        \"resourceVersion\": \"43930609\",\n        \"generation\": 1,\n        \"creationTimestamp\": \"2024-04-10T13:18:42Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T13:18:42Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/creator\": {}\n                        }\n                    },\n                    \"f:spec\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"templates\": [\n            {\n                \"name\": \"process-artifact\",\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"source-path\"\n                        },\n                        {\n                            \"name\": \"target-path\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"input-file\",\n                            \"path\": \"/tmp/input-file\",\n                            \"s3\": {\n                                \"key\": \"{{inputs.parameters.source-path}}\"\n                            }\n                        }\n                    ]\n                },\n                \"outputs\": {\n                    \"artifacts\": [\n                        {\n                            \"name\": \"output-file\",\n                            \"path\": \"/tmp/output-file.txt\",\n                            \"s3\": {\n                                \"key\": \"{{inputs.parameters.target-path}}\"\n                            },\n                            \"archive\": {\n                                \"none\": {}\n                            }\n                        }\n                    ]\n                },\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"argoproj/argosay:v2\",\n                    \"command\": [\n                        \"sh\",\n                        \"-c\"\n                    ],\n                    \"args\": [\n                        \"ls -lh /tmp/input-file >> /tmp/output-file.txt\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        ],\n        \"entrypoint\": \"process-artifact\",\n        \"arguments\": {}\n    }\n}"
						}
					]
				},
				{
					"name": "Execute template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"workflow-execution-name\", jsonData.metadata.name);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"workflow\":\r\n{\r\n  \"apiVersion\": \"argoproj.io/v1alpha1\",\r\n  \"kind\": \"Workflow\",\r\n  \"metadata\": {\r\n    \"generateName\": \"artifact-consumer-wft-\"\r\n  },\r\n  \"spec\": {\r\n    \"arguments\": {\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"source-path\",\r\n          \"value\": \"lorem.txt\"\r\n        },\r\n        {\r\n          \"name\": \"target-path\",\r\n          \"value\": \"result.txt\"\r\n        }\r\n      ]\r\n    },\r\n    \"workflowTemplateRef\": {\r\n      \"name\": \"artifact-consumer-wft\"\r\n    }\r\n  }\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{argo-endpoint}}/workflows/{{namespace}}",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflows",
								"{{namespace}}"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"var instance = pm.environment.get(\"workflow-execution-name\");\r",
									"console.log(jsonData);\r",
									"postman.setEnvironmentVariable(\"workflow-outbound-node\", instance);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflows",
								"{{namespace}}",
								"{{workflow-execution-name}}"
							]
						}
					},
					"response": [
						{
							"name": "Get Status - RUNNING",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}",
										"{{workflow-execution-name}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Grpc-Metadata-Content-Type",
									"value": "application/grpc"
								},
								{
									"key": "X-Ratelimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-Ratelimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-Ratelimit-Reset",
									"value": "Wed, 10 Apr 2024 14:03:59 UTC"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Apr 2024 14:03:59 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"metadata\": {\n        \"name\": \"artifact-consumer-wft-wlt6j\",\n        \"generateName\": \"artifact-consumer-wft-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"48b0c81e-0eb3-4b11-b41f-1aec8bbb24f9\",\n        \"resourceVersion\": \"43930689\",\n        \"generation\": 2,\n        \"creationTimestamp\": \"2024-04-10T13:19:27Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\",\n            \"workflows.argoproj.io/phase\": \"Running\"\n        },\n        \"annotations\": {\n            \"workflows.argoproj.io/pod-name-format\": \"v2\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T13:19:27Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:generateName\": {},\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/creator\": {}\n                        }\n                    },\n                    \"f:spec\": {}\n                }\n            },\n            {\n                \"manager\": \"workflow-controller\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T13:19:27Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:annotations\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/pod-name-format\": {}\n                        },\n                        \"f:labels\": {\n                            \"f:workflows.argoproj.io/phase\": {}\n                        }\n                    },\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"arguments\": {\n            \"parameters\": [\n                {\n                    \"name\": \"source-path\",\n                    \"value\": \"lorem.txt\"\n                },\n                {\n                    \"name\": \"target-path\",\n                    \"value\": \"result.txt\"\n                }\n            ]\n        },\n        \"workflowTemplateRef\": {\n            \"name\": \"artifact-consumer-wft\"\n        }\n    },\n    \"status\": {\n        \"phase\": \"Running\",\n        \"startedAt\": \"2024-04-10T14:03:45Z\",\n        \"finishedAt\": null,\n        \"progress\": \"0/1\",\n        \"nodes\": {\n            \"artifact-consumer-wft-wlt6j\": {\n                \"id\": \"artifact-consumer-wft-wlt6j\",\n                \"name\": \"artifact-consumer-wft-wlt6j\",\n                \"displayName\": \"artifact-consumer-wft-wlt6j\",\n                \"type\": \"Pod\",\n                \"templateName\": \"process-artifact\",\n                \"templateScope\": \"local/\",\n                \"phase\": \"Pending\",\n                \"startedAt\": \"2024-04-10T14:03:45Z\",\n                \"finishedAt\": null,\n                \"progress\": \"0/1\",\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"source-path\",\n                            \"value\": \"lorem.txt\"\n                        },\n                        {\n                            \"name\": \"target-path\",\n                            \"value\": \"result.txt\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"input-file\",\n                            \"path\": \"/tmp/input-file\",\n                            \"s3\": {\n                                \"key\": \"lorem.txt\"\n                            }\n                        }\n                    ]\n                }\n            }\n        },\n        \"storedTemplates\": {\n            \"namespaced/artifact-consumer-wft/process-artifact\": {\n                \"name\": \"process-artifact\",\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"source-path\"\n                        },\n                        {\n                            \"name\": \"target-path\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"input-file\",\n                            \"path\": \"/tmp/input-file\",\n                            \"s3\": {\n                                \"key\": \"{{inputs.parameters.source-path}}\"\n                            }\n                        }\n                    ]\n                },\n                \"outputs\": {\n                    \"artifacts\": [\n                        {\n                            \"name\": \"output-file\",\n                            \"path\": \"/tmp/output-file.txt\",\n                            \"s3\": {\n                                \"key\": \"{{inputs.parameters.target-path}}\"\n                            },\n                            \"archive\": {\n                                \"none\": {}\n                            }\n                        }\n                    ]\n                },\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"argoproj/argosay:v2\",\n                    \"command\": [\n                        \"sh\",\n                        \"-c\"\n                    ],\n                    \"args\": [\n                        \"ls -lh /tmp/input-file >> /tmp/output-file.txt\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        },\n        \"storedWorkflowTemplateSpec\": {\n            \"templates\": [\n                {\n                    \"name\": \"process-artifact\",\n                    \"inputs\": {\n                        \"parameters\": [\n                            {\n                                \"name\": \"source-path\"\n                            },\n                            {\n                                \"name\": \"target-path\"\n                            }\n                        ],\n                        \"artifacts\": [\n                            {\n                                \"name\": \"input-file\",\n                                \"path\": \"/tmp/input-file\",\n                                \"s3\": {\n                                    \"key\": \"{{inputs.parameters.source-path}}\"\n                                }\n                            }\n                        ]\n                    },\n                    \"outputs\": {\n                        \"artifacts\": [\n                            {\n                                \"name\": \"output-file\",\n                                \"path\": \"/tmp/output-file.txt\",\n                                \"s3\": {\n                                    \"key\": \"{{inputs.parameters.target-path}}\"\n                                },\n                                \"archive\": {\n                                    \"none\": {}\n                                }\n                            }\n                        ]\n                    },\n                    \"metadata\": {},\n                    \"container\": {\n                        \"name\": \"\",\n                        \"image\": \"argoproj/argosay:v2\",\n                        \"command\": [\n                            \"sh\",\n                            \"-c\"\n                        ],\n                        \"args\": [\n                            \"ls -lh /tmp/input-file >> /tmp/output-file.txt\"\n                        ],\n                        \"resources\": {}\n                    }\n                }\n            ],\n            \"entrypoint\": \"process-artifact\",\n            \"arguments\": {\n                \"parameters\": [\n                    {\n                        \"name\": \"source-path\",\n                        \"value\": \"lorem.txt\"\n                    },\n                    {\n                        \"name\": \"target-path\",\n                        \"value\": \"result.txt\"\n                    }\n                ]\n            },\n            \"workflowTemplateRef\": {\n                \"name\": \"artifact-consumer-wft\"\n            }\n        },\n        \"artifactRepositoryRef\": {\n            \"configMap\": \"artifact-repositories\",\n            \"key\": \"default-artifact-repository\",\n            \"namespace\": \"argo\",\n            \"artifactRepository\": {\n                \"s3\": {\n                    \"endpoint\": \"172.17.20.10:30900\",\n                    \"bucket\": \"test\",\n                    \"insecure\": true,\n                    \"accessKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"accessKey\"\n                    },\n                    \"secretKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"secretKey\"\n                    }\n                }\n            }\n        },\n        \"artifactGCStatus\": {\n            \"notSpecified\": true\n        }\n    }\n}"
						},
						{
							"name": "Get Status - SUCCEEDED",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}",
										"{{workflow-execution-name}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Grpc-Metadata-Content-Type",
									"value": "application/grpc"
								},
								{
									"key": "X-Ratelimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-Ratelimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-Ratelimit-Reset",
									"value": "Wed, 10 Apr 2024 14:04:12 UTC"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Apr 2024 14:04:12 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"metadata\": {\n        \"name\": \"artifact-consumer-wft-wlt6j\",\n        \"generateName\": \"artifact-consumer-wft-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"48b0c81e-0eb3-4b11-b41f-1aec8bbb24f9\",\n        \"resourceVersion\": \"43930728\",\n        \"generation\": 3,\n        \"creationTimestamp\": \"2024-04-10T13:19:27Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/completed\": \"true\",\n            \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\",\n            \"workflows.argoproj.io/phase\": \"Succeeded\"\n        },\n        \"annotations\": {\n            \"workflows.argoproj.io/pod-name-format\": \"v2\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T13:19:27Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:generateName\": {},\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/creator\": {}\n                        }\n                    },\n                    \"f:spec\": {}\n                }\n            },\n            {\n                \"manager\": \"workflow-controller\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T13:19:37Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:annotations\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/pod-name-format\": {}\n                        },\n                        \"f:labels\": {\n                            \"f:workflows.argoproj.io/completed\": {},\n                            \"f:workflows.argoproj.io/phase\": {}\n                        }\n                    },\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"arguments\": {\n            \"parameters\": [\n                {\n                    \"name\": \"source-path\",\n                    \"value\": \"lorem.txt\"\n                },\n                {\n                    \"name\": \"target-path\",\n                    \"value\": \"result.txt\"\n                }\n            ]\n        },\n        \"workflowTemplateRef\": {\n            \"name\": \"artifact-consumer-wft\"\n        }\n    },\n    \"status\": {\n        \"phase\": \"Succeeded\",\n        \"startedAt\": \"2024-04-10T14:03:45Z\",\n        \"finishedAt\": \"2024-04-10T14:03:55Z\",\n        \"progress\": \"1/1\",\n        \"nodes\": {\n            \"artifact-consumer-wft-wlt6j\": {\n                \"id\": \"artifact-consumer-wft-wlt6j\",\n                \"name\": \"artifact-consumer-wft-wlt6j\",\n                \"displayName\": \"artifact-consumer-wft-wlt6j\",\n                \"type\": \"Pod\",\n                \"templateName\": \"process-artifact\",\n                \"templateScope\": \"local/\",\n                \"phase\": \"Succeeded\",\n                \"startedAt\": \"2024-04-10T14:03:45Z\",\n                \"finishedAt\": \"2024-04-10T14:04:00Z\",\n                \"progress\": \"1/1\",\n                \"resourcesDuration\": {\n                    \"cpu\": 3,\n                    \"memory\": 3\n                },\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"source-path\",\n                            \"value\": \"lorem.txt\"\n                        },\n                        {\n                            \"name\": \"target-path\",\n                            \"value\": \"result.txt\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"input-file\",\n                            \"path\": \"/tmp/input-file\",\n                            \"s3\": {\n                                \"key\": \"lorem.txt\"\n                            }\n                        }\n                    ]\n                },\n                \"outputs\": {\n                    \"artifacts\": [\n                        {\n                            \"name\": \"output-file\",\n                            \"path\": \"/tmp/output-file.txt\",\n                            \"s3\": {\n                                \"key\": \"result.txt\"\n                            },\n                            \"archive\": {\n                                \"none\": {}\n                            }\n                        }\n                    ],\n                    \"exitCode\": \"0\"\n                },\n                \"hostNodeName\": \"l-k8s01-node03.spb.spacebel.be\"\n            }\n        },\n        \"storedTemplates\": {\n            \"namespaced/artifact-consumer-wft/process-artifact\": {\n                \"name\": \"process-artifact\",\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"source-path\"\n                        },\n                        {\n                            \"name\": \"target-path\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"input-file\",\n                            \"path\": \"/tmp/input-file\",\n                            \"s3\": {\n                                \"key\": \"{{inputs.parameters.source-path}}\"\n                            }\n                        }\n                    ]\n                },\n                \"outputs\": {\n                    \"artifacts\": [\n                        {\n                            \"name\": \"output-file\",\n                            \"path\": \"/tmp/output-file.txt\",\n                            \"s3\": {\n                                \"key\": \"{{inputs.parameters.target-path}}\"\n                            },\n                            \"archive\": {\n                                \"none\": {}\n                            }\n                        }\n                    ]\n                },\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"argoproj/argosay:v2\",\n                    \"command\": [\n                        \"sh\",\n                        \"-c\"\n                    ],\n                    \"args\": [\n                        \"ls -lh /tmp/input-file >> /tmp/output-file.txt\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        },\n        \"conditions\": [\n            {\n                \"type\": \"PodRunning\",\n                \"status\": \"False\"\n            },\n            {\n                \"type\": \"Completed\",\n                \"status\": \"True\"\n            }\n        ],\n        \"resourcesDuration\": {\n            \"cpu\": 3,\n            \"memory\": 3\n        },\n        \"storedWorkflowTemplateSpec\": {\n            \"templates\": [\n                {\n                    \"name\": \"process-artifact\",\n                    \"inputs\": {\n                        \"parameters\": [\n                            {\n                                \"name\": \"source-path\"\n                            },\n                            {\n                                \"name\": \"target-path\"\n                            }\n                        ],\n                        \"artifacts\": [\n                            {\n                                \"name\": \"input-file\",\n                                \"path\": \"/tmp/input-file\",\n                                \"s3\": {\n                                    \"key\": \"{{inputs.parameters.source-path}}\"\n                                }\n                            }\n                        ]\n                    },\n                    \"outputs\": {\n                        \"artifacts\": [\n                            {\n                                \"name\": \"output-file\",\n                                \"path\": \"/tmp/output-file.txt\",\n                                \"s3\": {\n                                    \"key\": \"{{inputs.parameters.target-path}}\"\n                                },\n                                \"archive\": {\n                                    \"none\": {}\n                                }\n                            }\n                        ]\n                    },\n                    \"metadata\": {},\n                    \"container\": {\n                        \"name\": \"\",\n                        \"image\": \"argoproj/argosay:v2\",\n                        \"command\": [\n                            \"sh\",\n                            \"-c\"\n                        ],\n                        \"args\": [\n                            \"ls -lh /tmp/input-file >> /tmp/output-file.txt\"\n                        ],\n                        \"resources\": {}\n                    }\n                }\n            ],\n            \"entrypoint\": \"process-artifact\",\n            \"arguments\": {\n                \"parameters\": [\n                    {\n                        \"name\": \"source-path\",\n                        \"value\": \"lorem.txt\"\n                    },\n                    {\n                        \"name\": \"target-path\",\n                        \"value\": \"result.txt\"\n                    }\n                ]\n            },\n            \"workflowTemplateRef\": {\n                \"name\": \"artifact-consumer-wft\"\n            }\n        },\n        \"artifactRepositoryRef\": {\n            \"configMap\": \"artifact-repositories\",\n            \"key\": \"default-artifact-repository\",\n            \"namespace\": \"argo\",\n            \"artifactRepository\": {\n                \"s3\": {\n                    \"endpoint\": \"172.17.20.10:30900\",\n                    \"bucket\": \"test\",\n                    \"insecure\": true,\n                    \"accessKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"accessKey\"\n                    },\n                    \"secretKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"secretKey\"\n                    }\n                }\n            }\n        },\n        \"artifactGCStatus\": {\n            \"notSpecified\": true\n        },\n        \"taskResultsCompleted\": {\n            \"artifact-consumer-wft-wlt6j\": true\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get LOGS",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}/log?logOptions.container=main",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflows",
								"{{namespace}}",
								"{{workflow-execution-name}}",
								"log"
							],
							"query": [
								{
									"key": "logOptions.container",
									"value": "main"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get LOGS",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}/log?logOptions.container=main",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}",
										"{{workflow-execution-name}}",
										"log"
									],
									"query": [
										{
											"key": "logOptions.container",
											"value": "main"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Grpc-Metadata-Content-Type",
									"value": "application/grpc"
								},
								{
									"key": "X-Ratelimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-Ratelimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-Ratelimit-Reset",
									"value": "Wed, 10 Apr 2024 14:04:43 UTC"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Apr 2024 14:04:42 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\"result\":{\"content\":\"time=\\\"2024-04-10T14:04:00.087Z\\\" level=info msg=\\\"sub-process exited\\\" argo=true error=\\\"\\u003cnil\\u003e\\\"\",\"podName\":\"artifact-consumer-wft-wlt6j\"}}\n{\"result\":{\"content\":\"time=\\\"2024-04-10T14:04:00.087Z\\\" level=info msg=\\\"/tmp/output-file.txt -\\u003e /var/run/argo/outputs/artifacts/tmp/output-file.txt.tgz\\\" argo=true\",\"podName\":\"artifact-consumer-wft-wlt6j\"}}\n{\"result\":{\"content\":\"time=\\\"2024-04-10T14:04:00.087Z\\\" level=info msg=\\\"Taring /tmp/output-file.txt\\\"\",\"podName\":\"artifact-consumer-wft-wlt6j\"}}\n"
						}
					]
				},
				{
					"name": "Download Output Artifact",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{argo-artifact-endpoint}}/{{namespace}}/workflows/{{workflow-execution-name}}/{{workflow-outbound-node}}/outputs/output-file",
							"host": [
								"{{argo-artifact-endpoint}}"
							],
							"path": [
								"{{namespace}}",
								"workflows",
								"{{workflow-execution-name}}",
								"{{workflow-outbound-node}}",
								"outputs",
								"output-file"
							]
						}
					},
					"response": [
						{
							"name": "Download Output Artifact",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{argo-artifact-endpoint}}/{{namespace}}/workflows/{{workflow-execution-name}}/{{workflow-outbound-node}}/outputs/output-file",
									"host": [
										"{{argo-artifact-endpoint}}"
									],
									"path": [
										"{{namespace}}",
										"workflows",
										"{{workflow-execution-name}}",
										"{{workflow-outbound-node}}",
										"outputs",
										"output-file"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Disposition",
									"value": "filename=\"result.txt\""
								},
								{
									"key": "Content-Security-Policy",
									"value": "sandbox; base-uri 'none'; default-src 'none'; img-src 'self'; style-src 'self' 'unsafe-inline'"
								},
								{
									"key": "Content-Type",
									"value": ""
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Ratelimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-Ratelimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-Ratelimit-Reset",
									"value": "Wed, 10 Apr 2024 14:17:12 UTC"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Apr 2024 14:17:11 GMT"
								},
								{
									"key": "Content-Length",
									"value": "56"
								}
							],
							"cookie": [],
							"body": "-rw-------. 1 root root 16 Apr 10 14:03 /tmp/input-file\n"
						}
					]
				}
			]
		},
		{
			"name": "DEMO-EXAMPLE",
			"item": [
				{
					"name": "CREATE Workflow Template",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"template\": {\r\n  \"apiVersion\": \"argoproj.io/v1alpha1\",\r\n  \"kind\": \"WorkflowTemplate\",\r\n  \"metadata\": {\r\n    \"name\": \"demo-artifacts-wft\"\r\n  },\r\n  \"spec\": {\r\n    \"entrypoint\": \"main\",\r\n    \"templates\": [\r\n      {\r\n        \"name\": \"main\",\r\n        \"steps\": [\r\n          [\r\n            {\r\n              \"name\": \"process-artifact\",\r\n              \"template\": \"process-artifact\",\r\n              \"arguments\": {\r\n                \"parameters\": [\r\n                  {\r\n                    \"name\": \"source-path\",\r\n                    \"value\": \"{{workflow.parameters.source-path}}\"\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          ],\r\n          [\r\n            {\r\n              \"name\": \"compress-files\",\r\n              \"template\": \"compress-files\",\r\n              \"arguments\": {\r\n                \"parameters\": [\r\n                  {\r\n                    \"name\": \"target-path\",\r\n                    \"value\": \"{{workflow.parameters.target-path}}\"\r\n                  }\r\n                ],\r\n                \"artifacts\": [\r\n                  {\r\n                    \"name\": \"intermediate-file\",\r\n                    \"from\": \"{{steps.process-artifact.outputs.artifacts.intermediate-file}}\"\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          ]\r\n        ]\r\n      },\r\n      {\r\n        \"name\": \"process-artifact\",\r\n        \"inputs\": {\r\n          \"parameters\": [\r\n            {\r\n              \"name\": \"source-path\"\r\n            }\r\n          ],\r\n          \"artifacts\": [\r\n            {\r\n              \"name\": \"input-file\",\r\n              \"path\": \"/tmp/input-file\",\r\n              \"s3\": {\r\n                \"key\": \"{{inputs.parameters.source-path}}\"\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        \"outputs\": {\r\n          \"artifacts\": [\r\n            {\r\n              \"name\": \"intermediate-file\",\r\n              \"path\": \"/tmp/intermediate-file\"\r\n            }\r\n          ]\r\n        },\r\n        \"container\": {\r\n          \"image\": \"alpine\",\r\n          \"command\": [\r\n            \"sh\",\r\n            \"-c\"\r\n          ],\r\n          \"args\": [\r\n            \"mkdir -p /tmp/intermediate-file/ && cp /tmp/input-file /tmp/intermediate-file/input.txt && echo \\\"processing time: $(date)\\\" > /tmp/intermediate-file/processing.txt\"\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"name\": \"compress-files\",\r\n        \"inputs\": {\r\n          \"parameters\": [\r\n            {\r\n              \"name\": \"target-path\"\r\n            }\r\n          ],\r\n          \"artifacts\": [\r\n            {\r\n              \"name\": \"intermediate-file\",\r\n              \"path\": \"/tmp/intermediate-file\"\r\n            }\r\n          ]\r\n        },\r\n        \"outputs\": {\r\n          \"artifacts\": [\r\n            {\r\n              \"name\": \"output-file\",\r\n              \"path\": \"/output-file\",\r\n              \"archive\": {\r\n                \"none\": {}\r\n              },\r\n              \"s3\": {\r\n                \"key\": \"{{inputs.parameters.target-path}}\"\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        \"container\": {\r\n          \"image\": \"alpine\",\r\n          \"command\": [\r\n            \"sh\",\r\n            \"-c\"\r\n          ],\r\n          \"args\": [\r\n            \"tar -cf output-file /tmp/intermediate-file\"\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{argo-endpoint}}/workflow-templates/{{namespace}}",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflow-templates",
								"{{namespace}}"
							]
						}
					},
					"response": [
						{
							"name": "CREATE Workflow Template",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"template\": {\r\n  \"apiVersion\": \"argoproj.io/v1alpha1\",\r\n  \"kind\": \"WorkflowTemplate\",\r\n  \"metadata\": {\r\n    \"name\": \"demo-artifacts-wft\"\r\n  },\r\n  \"spec\": {\r\n    \"entrypoint\": \"main\",\r\n    \"templates\": [\r\n      {\r\n        \"name\": \"main\",\r\n        \"steps\": [\r\n          [\r\n            {\r\n              \"name\": \"process-artifact\",\r\n              \"template\": \"process-artifact\",\r\n              \"arguments\": {\r\n                \"parameters\": [\r\n                  {\r\n                    \"name\": \"source-path\",\r\n                    \"value\": \"{{workflow.parameters.source-path}}\"\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          ],\r\n          [\r\n            {\r\n              \"name\": \"compress-files\",\r\n              \"template\": \"compress-files\",\r\n              \"arguments\": {\r\n                \"parameters\": [\r\n                  {\r\n                    \"name\": \"target-path\",\r\n                    \"value\": \"{{workflow.parameters.target-path}}\"\r\n                  }\r\n                ],\r\n                \"artifacts\": [\r\n                  {\r\n                    \"name\": \"intermediate-file\",\r\n                    \"from\": \"{{steps.process-artifact.outputs.artifacts.intermediate-file}}\"\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          ]\r\n        ]\r\n      },\r\n      {\r\n        \"name\": \"process-artifact\",\r\n        \"inputs\": {\r\n          \"parameters\": [\r\n            {\r\n              \"name\": \"source-path\"\r\n            }\r\n          ],\r\n          \"artifacts\": [\r\n            {\r\n              \"name\": \"input-file\",\r\n              \"path\": \"/tmp/input-file\",\r\n              \"s3\": {\r\n                \"key\": \"{{inputs.parameters.source-path}}\"\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        \"outputs\": {\r\n          \"artifacts\": [\r\n            {\r\n              \"name\": \"intermediate-file\",\r\n              \"path\": \"/tmp/intermediate-file\"\r\n            }\r\n          ]\r\n        },\r\n        \"container\": {\r\n          \"image\": \"alpine\",\r\n          \"command\": [\r\n            \"sh\",\r\n            \"-c\"\r\n          ],\r\n          \"args\": [\r\n            \"mkdir -p /tmp/intermediate-file/ && cp /tmp/input-file /tmp/intermediate-file/input.txt && echo \\\"processing time: $(date)\\\" > /tmp/intermediate-file/processing.txt\"\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"name\": \"compress-files\",\r\n        \"inputs\": {\r\n          \"parameters\": [\r\n            {\r\n              \"name\": \"target-path\"\r\n            }\r\n          ],\r\n          \"artifacts\": [\r\n            {\r\n              \"name\": \"intermediate-file\",\r\n              \"path\": \"/tmp/intermediate-file\"\r\n            }\r\n          ]\r\n        },\r\n        \"outputs\": {\r\n          \"artifacts\": [\r\n            {\r\n              \"name\": \"output-file\",\r\n              \"path\": \"/output-file\",\r\n              \"archive\": {\r\n                \"none\": {}\r\n              },\r\n              \"s3\": {\r\n                \"key\": \"{{inputs.parameters.target-path}}\"\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        \"container\": {\r\n          \"image\": \"alpine\",\r\n          \"command\": [\r\n            \"sh\",\r\n            \"-c\"\r\n          ],\r\n          \"args\": [\r\n            \"tar -cf output-file /tmp/intermediate-file\"\r\n          ]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{argo-endpoint}}/workflow-templates/{{namespace}}",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflow-templates",
										"{{namespace}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Grpc-Metadata-Content-Type",
									"value": "application/grpc"
								},
								{
									"key": "X-Ratelimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-Ratelimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-Ratelimit-Reset",
									"value": "Wed, 10 Apr 2024 14:20:20 UTC"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Apr 2024 14:20:19 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"metadata\": {\n        \"name\": \"demo-artifacts-wft\",\n        \"namespace\": \"argo\",\n        \"uid\": \"3da6bd27-f9af-47d0-8054-6ced25e019e3\",\n        \"resourceVersion\": \"43932419\",\n        \"generation\": 1,\n        \"creationTimestamp\": \"2024-04-10T13:35:49Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T13:35:49Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/creator\": {}\n                        }\n                    },\n                    \"f:spec\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"templates\": [\n            {\n                \"name\": \"main\",\n                \"inputs\": {},\n                \"outputs\": {},\n                \"metadata\": {},\n                \"steps\": [\n                    [\n                        {\n                            \"name\": \"process-artifact\",\n                            \"template\": \"process-artifact\",\n                            \"arguments\": {\n                                \"parameters\": [\n                                    {\n                                        \"name\": \"source-path\",\n                                        \"value\": \"{{workflow.parameters.source-path}}\"\n                                    }\n                                ]\n                            }\n                        }\n                    ],\n                    [\n                        {\n                            \"name\": \"compress-files\",\n                            \"template\": \"compress-files\",\n                            \"arguments\": {\n                                \"parameters\": [\n                                    {\n                                        \"name\": \"target-path\",\n                                        \"value\": \"{{workflow.parameters.target-path}}\"\n                                    }\n                                ],\n                                \"artifacts\": [\n                                    {\n                                        \"name\": \"intermediate-file\",\n                                        \"from\": \"{{steps.process-artifact.outputs.artifacts.intermediate-file}}\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                ]\n            },\n            {\n                \"name\": \"process-artifact\",\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"source-path\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"input-file\",\n                            \"path\": \"/tmp/input-file\",\n                            \"s3\": {\n                                \"key\": \"{{inputs.parameters.source-path}}\"\n                            }\n                        }\n                    ]\n                },\n                \"outputs\": {\n                    \"artifacts\": [\n                        {\n                            \"name\": \"intermediate-file\",\n                            \"path\": \"/tmp/intermediate-file\"\n                        }\n                    ]\n                },\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"alpine\",\n                    \"command\": [\n                        \"sh\",\n                        \"-c\"\n                    ],\n                    \"args\": [\n                        \"mkdir -p /tmp/intermediate-file/ && cp /tmp/input-file /tmp/intermediate-file/input.txt && echo \\\"processing time: $(date)\\\" > /tmp/intermediate-file/processing.txt\"\n                    ],\n                    \"resources\": {}\n                }\n            },\n            {\n                \"name\": \"compress-files\",\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"target-path\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"intermediate-file\",\n                            \"path\": \"/tmp/intermediate-file\"\n                        }\n                    ]\n                },\n                \"outputs\": {\n                    \"artifacts\": [\n                        {\n                            \"name\": \"output-file\",\n                            \"path\": \"/output-file\",\n                            \"s3\": {\n                                \"key\": \"{{inputs.parameters.target-path}}\"\n                            },\n                            \"archive\": {\n                                \"none\": {}\n                            }\n                        }\n                    ]\n                },\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"alpine\",\n                    \"command\": [\n                        \"sh\",\n                        \"-c\"\n                    ],\n                    \"args\": [\n                        \"tar -cf output-file /tmp/intermediate-file\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        ],\n        \"entrypoint\": \"main\",\n        \"arguments\": {}\n    }\n}"
						}
					]
				},
				{
					"name": "Execute template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"workflow-execution-name\", jsonData.metadata.name);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"workflow\":\r\n{\r\n  \"apiVersion\": \"argoproj.io/v1alpha1\",\r\n  \"kind\": \"Workflow\",\r\n  \"metadata\": {\r\n    \"generateName\": \"demo-artifacts-wft-\"\r\n  },\r\n  \"spec\": {\r\n    \"arguments\": {\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"source-path\",\r\n          \"value\": \"lorem.txt\"\r\n        },\r\n        {\r\n          \"name\": \"target-path\",\r\n          \"value\": \"result.tar\"\r\n        }\r\n      ]\r\n    },\r\n    \"workflowTemplateRef\": {\r\n      \"name\": \"demo-artifacts-wft\"\r\n    }\r\n  }\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{argo-endpoint}}/workflows/{{namespace}}",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflows",
								"{{namespace}}"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Execute template",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"workflow\":\r\n{\r\n  \"apiVersion\": \"argoproj.io/v1alpha1\",\r\n  \"kind\": \"Workflow\",\r\n  \"metadata\": {\r\n    \"generateName\": \"demo-artifacts-wft-\"\r\n  },\r\n  \"spec\": {\r\n    \"arguments\": {\r\n      \"parameters\": [\r\n        {\r\n          \"name\": \"source-path\",\r\n          \"value\": \"lorem.txt\"\r\n        },\r\n        {\r\n          \"name\": \"target-path\",\r\n          \"value\": \"result.tar\"\r\n        }\r\n      ]\r\n    },\r\n    \"workflowTemplateRef\": {\r\n      \"name\": \"demo-artifacts-wft\"\r\n    }\r\n  }\r\n}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Grpc-Metadata-Content-Type",
									"value": "application/grpc"
								},
								{
									"key": "X-Ratelimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-Ratelimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-Ratelimit-Reset",
									"value": "Wed, 10 Apr 2024 12:10:59 UTC"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Apr 2024 12:10:58 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"metadata\": {\n        \"name\": \"demo-artifacts-wft-p2k8d\",\n        \"generateName\": \"demo-artifacts-wft-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"474d2b0e-7740-47db-b594-a135deb1c8ba\",\n        \"resourceVersion\": \"43918812\",\n        \"generation\": 1,\n        \"creationTimestamp\": \"2024-04-10T11:26:29Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T11:26:29Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:generateName\": {},\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/creator\": {}\n                        }\n                    },\n                    \"f:spec\": {},\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"arguments\": {\n            \"parameters\": [\n                {\n                    \"name\": \"source-path\",\n                    \"value\": \"lorem.txt\"\n                },\n                {\n                    \"name\": \"target-path\",\n                    \"value\": \"result.tar\"\n                }\n            ]\n        },\n        \"workflowTemplateRef\": {\n            \"name\": \"demo-artifacts-wft\"\n        }\n    },\n    \"status\": {\n        \"startedAt\": null,\n        \"finishedAt\": null,\n        \"storedTemplates\": {\n            \"namespaced/demo-artifacts-wft/compress-files\": {\n                \"name\": \"compress-files\",\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"target-path\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"intermediate-file\",\n                            \"path\": \"/tmp/intermediate-file\"\n                        }\n                    ]\n                },\n                \"outputs\": {\n                    \"artifacts\": [\n                        {\n                            \"name\": \"output-file\",\n                            \"path\": \"/output-file\",\n                            \"s3\": {\n                                \"key\": \"{{inputs.parameters.target-path}}\"\n                            },\n                            \"archive\": {\n                                \"none\": {}\n                            }\n                        }\n                    ]\n                },\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"alpine\",\n                    \"command\": [\n                        \"sh\",\n                        \"-c\"\n                    ],\n                    \"args\": [\n                        \"tar -cf output-file /tmp/intermediate-file\"\n                    ],\n                    \"resources\": {}\n                }\n            },\n            \"namespaced/demo-artifacts-wft/main\": {\n                \"name\": \"main\",\n                \"inputs\": {},\n                \"outputs\": {},\n                \"metadata\": {},\n                \"steps\": [\n                    [\n                        {\n                            \"name\": \"process-artifact\",\n                            \"template\": \"process-artifact\",\n                            \"arguments\": {\n                                \"parameters\": [\n                                    {\n                                        \"name\": \"source-path\",\n                                        \"value\": \"{{workflow.parameters.source-path}}\"\n                                    }\n                                ]\n                            }\n                        }\n                    ],\n                    [\n                        {\n                            \"name\": \"compress-files\",\n                            \"template\": \"compress-files\",\n                            \"arguments\": {\n                                \"parameters\": [\n                                    {\n                                        \"name\": \"target-path\",\n                                        \"value\": \"{{workflow.parameters.target-path}}\"\n                                    }\n                                ],\n                                \"artifacts\": [\n                                    {\n                                        \"name\": \"intermediate-file\",\n                                        \"from\": \"{{steps.process-artifact.outputs.artifacts.intermediate-file}}\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                ]\n            },\n            \"namespaced/demo-artifacts-wft/process-artifact\": {\n                \"name\": \"process-artifact\",\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"source-path\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"input-file\",\n                            \"path\": \"/tmp/input-file\",\n                            \"s3\": {\n                                \"key\": \"{{inputs.parameters.source-path}}\"\n                            }\n                        }\n                    ]\n                },\n                \"outputs\": {\n                    \"artifacts\": [\n                        {\n                            \"name\": \"intermediate-file\",\n                            \"path\": \"/tmp/intermediate-file\"\n                        }\n                    ]\n                },\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"alpine\",\n                    \"command\": [\n                        \"sh\",\n                        \"-c\"\n                    ],\n                    \"args\": [\n                        \"mkdir -p /tmp/intermediate-file/ && cp /tmp/input-file /tmp/intermediate-file/input.txt && echo \\\"processing time: $(date)\\\" > /tmp/intermediate-file/processing.txt\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"var instance = pm.environment.get(\"workflow-execution-name\");\r",
									"postman.setEnvironmentVariable(\"workflow-outbound-node\", jsonData.status.nodes[instance].outboundNodes['0']);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflows",
								"{{namespace}}",
								"{{workflow-execution-name}}"
							]
						}
					},
					"response": [
						{
							"name": "Get Status - RUNNING",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}",
										"{{workflow-execution-name}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Grpc-Metadata-Content-Type",
									"value": "application/grpc"
								},
								{
									"key": "X-Ratelimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-Ratelimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-Ratelimit-Reset",
									"value": "Wed, 10 Apr 2024 12:11:03 UTC"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Apr 2024 12:11:02 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"metadata\": {\n        \"name\": \"demo-artifacts-wft-p2k8d\",\n        \"generateName\": \"demo-artifacts-wft-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"474d2b0e-7740-47db-b594-a135deb1c8ba\",\n        \"resourceVersion\": \"43918815\",\n        \"generation\": 2,\n        \"creationTimestamp\": \"2024-04-10T11:26:29Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\",\n            \"workflows.argoproj.io/phase\": \"Running\"\n        },\n        \"annotations\": {\n            \"workflows.argoproj.io/pod-name-format\": \"v2\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T11:26:29Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:generateName\": {},\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/creator\": {}\n                        }\n                    },\n                    \"f:spec\": {}\n                }\n            },\n            {\n                \"manager\": \"workflow-controller\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T11:26:29Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:annotations\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/pod-name-format\": {}\n                        },\n                        \"f:labels\": {\n                            \"f:workflows.argoproj.io/phase\": {}\n                        }\n                    },\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"arguments\": {\n            \"parameters\": [\n                {\n                    \"name\": \"source-path\",\n                    \"value\": \"lorem.txt\"\n                },\n                {\n                    \"name\": \"target-path\",\n                    \"value\": \"result.tar\"\n                }\n            ]\n        },\n        \"workflowTemplateRef\": {\n            \"name\": \"demo-artifacts-wft\"\n        }\n    },\n    \"status\": {\n        \"phase\": \"Running\",\n        \"startedAt\": \"2024-04-10T12:10:46Z\",\n        \"finishedAt\": null,\n        \"progress\": \"0/1\",\n        \"nodes\": {\n            \"demo-artifacts-wft-p2k8d\": {\n                \"id\": \"demo-artifacts-wft-p2k8d\",\n                \"name\": \"demo-artifacts-wft-p2k8d\",\n                \"displayName\": \"demo-artifacts-wft-p2k8d\",\n                \"type\": \"Steps\",\n                \"templateName\": \"main\",\n                \"templateScope\": \"local/\",\n                \"phase\": \"Running\",\n                \"startedAt\": \"2024-04-10T12:10:46Z\",\n                \"finishedAt\": null,\n                \"progress\": \"0/1\",\n                \"children\": [\n                    \"demo-artifacts-wft-p2k8d-3756175374\"\n                ]\n            },\n            \"demo-artifacts-wft-p2k8d-2168713698\": {\n                \"id\": \"demo-artifacts-wft-p2k8d-2168713698\",\n                \"name\": \"demo-artifacts-wft-p2k8d[0].process-artifact\",\n                \"displayName\": \"process-artifact\",\n                \"type\": \"Pod\",\n                \"templateName\": \"process-artifact\",\n                \"templateScope\": \"local/\",\n                \"phase\": \"Pending\",\n                \"boundaryID\": \"demo-artifacts-wft-p2k8d\",\n                \"startedAt\": \"2024-04-10T12:10:46Z\",\n                \"finishedAt\": null,\n                \"progress\": \"0/1\",\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"source-path\",\n                            \"value\": \"lorem.txt\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"input-file\",\n                            \"path\": \"/tmp/input-file\",\n                            \"s3\": {\n                                \"key\": \"lorem.txt\"\n                            }\n                        }\n                    ]\n                }\n            },\n            \"demo-artifacts-wft-p2k8d-3756175374\": {\n                \"id\": \"demo-artifacts-wft-p2k8d-3756175374\",\n                \"name\": \"demo-artifacts-wft-p2k8d[0]\",\n                \"displayName\": \"[0]\",\n                \"type\": \"StepGroup\",\n                \"templateScope\": \"local/\",\n                \"phase\": \"Running\",\n                \"boundaryID\": \"demo-artifacts-wft-p2k8d\",\n                \"startedAt\": \"2024-04-10T12:10:46Z\",\n                \"finishedAt\": null,\n                \"progress\": \"0/1\",\n                \"nodeFlag\": {},\n                \"children\": [\n                    \"demo-artifacts-wft-p2k8d-2168713698\"\n                ]\n            }\n        },\n        \"storedTemplates\": {\n            \"namespaced/demo-artifacts-wft/compress-files\": {\n                \"name\": \"compress-files\",\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"target-path\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"intermediate-file\",\n                            \"path\": \"/tmp/intermediate-file\"\n                        }\n                    ]\n                },\n                \"outputs\": {\n                    \"artifacts\": [\n                        {\n                            \"name\": \"output-file\",\n                            \"path\": \"/output-file\",\n                            \"s3\": {\n                                \"key\": \"{{inputs.parameters.target-path}}\"\n                            },\n                            \"archive\": {\n                                \"none\": {}\n                            }\n                        }\n                    ]\n                },\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"alpine\",\n                    \"command\": [\n                        \"sh\",\n                        \"-c\"\n                    ],\n                    \"args\": [\n                        \"tar -cf output-file /tmp/intermediate-file\"\n                    ],\n                    \"resources\": {}\n                }\n            },\n            \"namespaced/demo-artifacts-wft/main\": {\n                \"name\": \"main\",\n                \"inputs\": {},\n                \"outputs\": {},\n                \"metadata\": {},\n                \"steps\": [\n                    [\n                        {\n                            \"name\": \"process-artifact\",\n                            \"template\": \"process-artifact\",\n                            \"arguments\": {\n                                \"parameters\": [\n                                    {\n                                        \"name\": \"source-path\",\n                                        \"value\": \"{{workflow.parameters.source-path}}\"\n                                    }\n                                ]\n                            }\n                        }\n                    ],\n                    [\n                        {\n                            \"name\": \"compress-files\",\n                            \"template\": \"compress-files\",\n                            \"arguments\": {\n                                \"parameters\": [\n                                    {\n                                        \"name\": \"target-path\",\n                                        \"value\": \"{{workflow.parameters.target-path}}\"\n                                    }\n                                ],\n                                \"artifacts\": [\n                                    {\n                                        \"name\": \"intermediate-file\",\n                                        \"from\": \"{{steps.process-artifact.outputs.artifacts.intermediate-file}}\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                ]\n            },\n            \"namespaced/demo-artifacts-wft/process-artifact\": {\n                \"name\": \"process-artifact\",\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"source-path\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"input-file\",\n                            \"path\": \"/tmp/input-file\",\n                            \"s3\": {\n                                \"key\": \"{{inputs.parameters.source-path}}\"\n                            }\n                        }\n                    ]\n                },\n                \"outputs\": {\n                    \"artifacts\": [\n                        {\n                            \"name\": \"intermediate-file\",\n                            \"path\": \"/tmp/intermediate-file\"\n                        }\n                    ]\n                },\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"alpine\",\n                    \"command\": [\n                        \"sh\",\n                        \"-c\"\n                    ],\n                    \"args\": [\n                        \"mkdir -p /tmp/intermediate-file/ && cp /tmp/input-file /tmp/intermediate-file/input.txt && echo \\\"processing time: $(date)\\\" > /tmp/intermediate-file/processing.txt\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        },\n        \"storedWorkflowTemplateSpec\": {\n            \"templates\": [\n                {\n                    \"name\": \"main\",\n                    \"inputs\": {},\n                    \"outputs\": {},\n                    \"metadata\": {},\n                    \"steps\": [\n                        [\n                            {\n                                \"name\": \"process-artifact\",\n                                \"template\": \"process-artifact\",\n                                \"arguments\": {\n                                    \"parameters\": [\n                                        {\n                                            \"name\": \"source-path\",\n                                            \"value\": \"{{workflow.parameters.source-path}}\"\n                                        }\n                                    ]\n                                }\n                            }\n                        ],\n                        [\n                            {\n                                \"name\": \"compress-files\",\n                                \"template\": \"compress-files\",\n                                \"arguments\": {\n                                    \"parameters\": [\n                                        {\n                                            \"name\": \"target-path\",\n                                            \"value\": \"{{workflow.parameters.target-path}}\"\n                                        }\n                                    ],\n                                    \"artifacts\": [\n                                        {\n                                            \"name\": \"intermediate-file\",\n                                            \"from\": \"{{steps.process-artifact.outputs.artifacts.intermediate-file}}\"\n                                        }\n                                    ]\n                                }\n                            }\n                        ]\n                    ]\n                },\n                {\n                    \"name\": \"process-artifact\",\n                    \"inputs\": {\n                        \"parameters\": [\n                            {\n                                \"name\": \"source-path\"\n                            }\n                        ],\n                        \"artifacts\": [\n                            {\n                                \"name\": \"input-file\",\n                                \"path\": \"/tmp/input-file\",\n                                \"s3\": {\n                                    \"key\": \"{{inputs.parameters.source-path}}\"\n                                }\n                            }\n                        ]\n                    },\n                    \"outputs\": {\n                        \"artifacts\": [\n                            {\n                                \"name\": \"intermediate-file\",\n                                \"path\": \"/tmp/intermediate-file\"\n                            }\n                        ]\n                    },\n                    \"metadata\": {},\n                    \"container\": {\n                        \"name\": \"\",\n                        \"image\": \"alpine\",\n                        \"command\": [\n                            \"sh\",\n                            \"-c\"\n                        ],\n                        \"args\": [\n                            \"mkdir -p /tmp/intermediate-file/ && cp /tmp/input-file /tmp/intermediate-file/input.txt && echo \\\"processing time: $(date)\\\" > /tmp/intermediate-file/processing.txt\"\n                        ],\n                        \"resources\": {}\n                    }\n                },\n                {\n                    \"name\": \"compress-files\",\n                    \"inputs\": {\n                        \"parameters\": [\n                            {\n                                \"name\": \"target-path\"\n                            }\n                        ],\n                        \"artifacts\": [\n                            {\n                                \"name\": \"intermediate-file\",\n                                \"path\": \"/tmp/intermediate-file\"\n                            }\n                        ]\n                    },\n                    \"outputs\": {\n                        \"artifacts\": [\n                            {\n                                \"name\": \"output-file\",\n                                \"path\": \"/output-file\",\n                                \"s3\": {\n                                    \"key\": \"{{inputs.parameters.target-path}}\"\n                                },\n                                \"archive\": {\n                                    \"none\": {}\n                                }\n                            }\n                        ]\n                    },\n                    \"metadata\": {},\n                    \"container\": {\n                        \"name\": \"\",\n                        \"image\": \"alpine\",\n                        \"command\": [\n                            \"sh\",\n                            \"-c\"\n                        ],\n                        \"args\": [\n                            \"tar -cf output-file /tmp/intermediate-file\"\n                        ],\n                        \"resources\": {}\n                    }\n                }\n            ],\n            \"entrypoint\": \"main\",\n            \"arguments\": {\n                \"parameters\": [\n                    {\n                        \"name\": \"source-path\",\n                        \"value\": \"lorem.txt\"\n                    },\n                    {\n                        \"name\": \"target-path\",\n                        \"value\": \"result.tar\"\n                    }\n                ]\n            },\n            \"workflowTemplateRef\": {\n                \"name\": \"demo-artifacts-wft\"\n            }\n        },\n        \"artifactRepositoryRef\": {\n            \"configMap\": \"artifact-repositories\",\n            \"key\": \"default-artifact-repository\",\n            \"namespace\": \"argo\",\n            \"artifactRepository\": {\n                \"s3\": {\n                    \"endpoint\": \"172.17.20.10:30900\",\n                    \"bucket\": \"test\",\n                    \"insecure\": true,\n                    \"accessKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"accessKey\"\n                    },\n                    \"secretKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"secretKey\"\n                    }\n                }\n            }\n        },\n        \"artifactGCStatus\": {\n            \"notSpecified\": true\n        }\n    }\n}"
						},
						{
							"name": "Get Status - SUCCEEDED",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}",
										"{{workflow-execution-name}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Grpc-Metadata-Content-Type",
									"value": "application/grpc"
								},
								{
									"key": "X-Ratelimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-Ratelimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-Ratelimit-Reset",
									"value": "Wed, 10 Apr 2024 12:11:44 UTC"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Apr 2024 12:11:43 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"metadata\": {\n        \"name\": \"demo-artifacts-wft-p2k8d\",\n        \"generateName\": \"demo-artifacts-wft-\",\n        \"namespace\": \"argo\",\n        \"uid\": \"474d2b0e-7740-47db-b594-a135deb1c8ba\",\n        \"resourceVersion\": \"43918899\",\n        \"generation\": 4,\n        \"creationTimestamp\": \"2024-04-10T11:26:29Z\",\n        \"labels\": {\n            \"workflows.argoproj.io/completed\": \"true\",\n            \"workflows.argoproj.io/creator\": \"system-serviceaccount-argo-argo-server\",\n            \"workflows.argoproj.io/phase\": \"Succeeded\"\n        },\n        \"annotations\": {\n            \"workflows.argoproj.io/pod-name-format\": \"v2\"\n        },\n        \"managedFields\": [\n            {\n                \"manager\": \"argo\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T11:26:29Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:generateName\": {},\n                        \"f:labels\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/creator\": {}\n                        }\n                    },\n                    \"f:spec\": {}\n                }\n            },\n            {\n                \"manager\": \"workflow-controller\",\n                \"operation\": \"Update\",\n                \"apiVersion\": \"argoproj.io/v1alpha1\",\n                \"time\": \"2024-04-10T11:26:49Z\",\n                \"fieldsType\": \"FieldsV1\",\n                \"fieldsV1\": {\n                    \"f:metadata\": {\n                        \"f:annotations\": {\n                            \".\": {},\n                            \"f:workflows.argoproj.io/pod-name-format\": {}\n                        },\n                        \"f:labels\": {\n                            \"f:workflows.argoproj.io/completed\": {},\n                            \"f:workflows.argoproj.io/phase\": {}\n                        }\n                    },\n                    \"f:status\": {}\n                }\n            }\n        ]\n    },\n    \"spec\": {\n        \"arguments\": {\n            \"parameters\": [\n                {\n                    \"name\": \"source-path\",\n                    \"value\": \"lorem.txt\"\n                },\n                {\n                    \"name\": \"target-path\",\n                    \"value\": \"result.tar\"\n                }\n            ]\n        },\n        \"workflowTemplateRef\": {\n            \"name\": \"demo-artifacts-wft\"\n        }\n    },\n    \"status\": {\n        \"phase\": \"Succeeded\",\n        \"startedAt\": \"2024-04-10T12:10:46Z\",\n        \"finishedAt\": \"2024-04-10T12:11:06Z\",\n        \"progress\": \"2/2\",\n        \"nodes\": {\n            \"demo-artifacts-wft-p2k8d\": {\n                \"id\": \"demo-artifacts-wft-p2k8d\",\n                \"name\": \"demo-artifacts-wft-p2k8d\",\n                \"displayName\": \"demo-artifacts-wft-p2k8d\",\n                \"type\": \"Steps\",\n                \"templateName\": \"main\",\n                \"templateScope\": \"local/\",\n                \"phase\": \"Succeeded\",\n                \"startedAt\": \"2024-04-10T12:10:46Z\",\n                \"finishedAt\": \"2024-04-10T12:11:06Z\",\n                \"progress\": \"2/2\",\n                \"resourcesDuration\": {\n                    \"cpu\": 9,\n                    \"memory\": 9\n                },\n                \"children\": [\n                    \"demo-artifacts-wft-p2k8d-3756175374\"\n                ],\n                \"outboundNodes\": [\n                    \"demo-artifacts-wft-p2k8d-3067331989\"\n                ]\n            },\n            \"demo-artifacts-wft-p2k8d-2168713698\": {\n                \"id\": \"demo-artifacts-wft-p2k8d-2168713698\",\n                \"name\": \"demo-artifacts-wft-p2k8d[0].process-artifact\",\n                \"displayName\": \"process-artifact\",\n                \"type\": \"Pod\",\n                \"templateName\": \"process-artifact\",\n                \"templateScope\": \"local/\",\n                \"phase\": \"Succeeded\",\n                \"boundaryID\": \"demo-artifacts-wft-p2k8d\",\n                \"startedAt\": \"2024-04-10T12:10:46Z\",\n                \"finishedAt\": \"2024-04-10T12:11:03Z\",\n                \"progress\": \"1/1\",\n                \"resourcesDuration\": {\n                    \"cpu\": 5,\n                    \"memory\": 5\n                },\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"source-path\",\n                            \"value\": \"lorem.txt\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"input-file\",\n                            \"path\": \"/tmp/input-file\",\n                            \"s3\": {\n                                \"key\": \"lorem.txt\"\n                            }\n                        }\n                    ]\n                },\n                \"outputs\": {\n                    \"artifacts\": [\n                        {\n                            \"name\": \"intermediate-file\",\n                            \"path\": \"/tmp/intermediate-file\",\n                            \"s3\": {\n                                \"key\": \"demo-artifacts-wft-p2k8d/demo-artifacts-wft-p2k8d-process-artifact-2168713698/intermediate-file.tgz\"\n                            }\n                        }\n                    ],\n                    \"exitCode\": \"0\"\n                },\n                \"children\": [\n                    \"demo-artifacts-wft-p2k8d-2615150187\"\n                ],\n                \"hostNodeName\": \"l-k8s01-node03.spb.spacebel.be\"\n            },\n            \"demo-artifacts-wft-p2k8d-2615150187\": {\n                \"id\": \"demo-artifacts-wft-p2k8d-2615150187\",\n                \"name\": \"demo-artifacts-wft-p2k8d[1]\",\n                \"displayName\": \"[1]\",\n                \"type\": \"StepGroup\",\n                \"templateScope\": \"local/\",\n                \"phase\": \"Succeeded\",\n                \"boundaryID\": \"demo-artifacts-wft-p2k8d\",\n                \"startedAt\": \"2024-04-10T12:10:56Z\",\n                \"finishedAt\": \"2024-04-10T12:11:06Z\",\n                \"progress\": \"1/1\",\n                \"resourcesDuration\": {\n                    \"cpu\": 4,\n                    \"memory\": 4\n                },\n                \"nodeFlag\": {},\n                \"children\": [\n                    \"demo-artifacts-wft-p2k8d-3067331989\"\n                ]\n            },\n            \"demo-artifacts-wft-p2k8d-3067331989\": {\n                \"id\": \"demo-artifacts-wft-p2k8d-3067331989\",\n                \"name\": \"demo-artifacts-wft-p2k8d[1].compress-files\",\n                \"displayName\": \"compress-files\",\n                \"type\": \"Pod\",\n                \"templateName\": \"compress-files\",\n                \"templateScope\": \"local/\",\n                \"phase\": \"Succeeded\",\n                \"boundaryID\": \"demo-artifacts-wft-p2k8d\",\n                \"startedAt\": \"2024-04-10T12:10:56Z\",\n                \"finishedAt\": \"2024-04-10T12:11:13Z\",\n                \"progress\": \"1/1\",\n                \"resourcesDuration\": {\n                    \"cpu\": 4,\n                    \"memory\": 4\n                },\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"target-path\",\n                            \"value\": \"result.tar\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"intermediate-file\",\n                            \"path\": \"/tmp/intermediate-file\",\n                            \"s3\": {\n                                \"key\": \"demo-artifacts-wft-p2k8d/demo-artifacts-wft-p2k8d-process-artifact-2168713698/intermediate-file.tgz\"\n                            }\n                        }\n                    ]\n                },\n                \"outputs\": {\n                    \"artifacts\": [\n                        {\n                            \"name\": \"output-file\",\n                            \"path\": \"/output-file\",\n                            \"s3\": {\n                                \"key\": \"result.tar\"\n                            },\n                            \"archive\": {\n                                \"none\": {}\n                            }\n                        }\n                    ],\n                    \"exitCode\": \"0\"\n                },\n                \"hostNodeName\": \"l-k8s01-node03.spb.spacebel.be\"\n            },\n            \"demo-artifacts-wft-p2k8d-3756175374\": {\n                \"id\": \"demo-artifacts-wft-p2k8d-3756175374\",\n                \"name\": \"demo-artifacts-wft-p2k8d[0]\",\n                \"displayName\": \"[0]\",\n                \"type\": \"StepGroup\",\n                \"templateScope\": \"local/\",\n                \"phase\": \"Succeeded\",\n                \"boundaryID\": \"demo-artifacts-wft-p2k8d\",\n                \"startedAt\": \"2024-04-10T12:10:46Z\",\n                \"finishedAt\": \"2024-04-10T12:10:56Z\",\n                \"progress\": \"2/2\",\n                \"resourcesDuration\": {\n                    \"cpu\": 9,\n                    \"memory\": 9\n                },\n                \"nodeFlag\": {},\n                \"children\": [\n                    \"demo-artifacts-wft-p2k8d-2168713698\"\n                ]\n            }\n        },\n        \"storedTemplates\": {\n            \"namespaced/demo-artifacts-wft/compress-files\": {\n                \"name\": \"compress-files\",\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"target-path\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"intermediate-file\",\n                            \"path\": \"/tmp/intermediate-file\"\n                        }\n                    ]\n                },\n                \"outputs\": {\n                    \"artifacts\": [\n                        {\n                            \"name\": \"output-file\",\n                            \"path\": \"/output-file\",\n                            \"s3\": {\n                                \"key\": \"{{inputs.parameters.target-path}}\"\n                            },\n                            \"archive\": {\n                                \"none\": {}\n                            }\n                        }\n                    ]\n                },\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"alpine\",\n                    \"command\": [\n                        \"sh\",\n                        \"-c\"\n                    ],\n                    \"args\": [\n                        \"tar -cf output-file /tmp/intermediate-file\"\n                    ],\n                    \"resources\": {}\n                }\n            },\n            \"namespaced/demo-artifacts-wft/main\": {\n                \"name\": \"main\",\n                \"inputs\": {},\n                \"outputs\": {},\n                \"metadata\": {},\n                \"steps\": [\n                    [\n                        {\n                            \"name\": \"process-artifact\",\n                            \"template\": \"process-artifact\",\n                            \"arguments\": {\n                                \"parameters\": [\n                                    {\n                                        \"name\": \"source-path\",\n                                        \"value\": \"{{workflow.parameters.source-path}}\"\n                                    }\n                                ]\n                            }\n                        }\n                    ],\n                    [\n                        {\n                            \"name\": \"compress-files\",\n                            \"template\": \"compress-files\",\n                            \"arguments\": {\n                                \"parameters\": [\n                                    {\n                                        \"name\": \"target-path\",\n                                        \"value\": \"{{workflow.parameters.target-path}}\"\n                                    }\n                                ],\n                                \"artifacts\": [\n                                    {\n                                        \"name\": \"intermediate-file\",\n                                        \"from\": \"{{steps.process-artifact.outputs.artifacts.intermediate-file}}\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                ]\n            },\n            \"namespaced/demo-artifacts-wft/process-artifact\": {\n                \"name\": \"process-artifact\",\n                \"inputs\": {\n                    \"parameters\": [\n                        {\n                            \"name\": \"source-path\"\n                        }\n                    ],\n                    \"artifacts\": [\n                        {\n                            \"name\": \"input-file\",\n                            \"path\": \"/tmp/input-file\",\n                            \"s3\": {\n                                \"key\": \"{{inputs.parameters.source-path}}\"\n                            }\n                        }\n                    ]\n                },\n                \"outputs\": {\n                    \"artifacts\": [\n                        {\n                            \"name\": \"intermediate-file\",\n                            \"path\": \"/tmp/intermediate-file\"\n                        }\n                    ]\n                },\n                \"metadata\": {},\n                \"container\": {\n                    \"name\": \"\",\n                    \"image\": \"alpine\",\n                    \"command\": [\n                        \"sh\",\n                        \"-c\"\n                    ],\n                    \"args\": [\n                        \"mkdir -p /tmp/intermediate-file/ && cp /tmp/input-file /tmp/intermediate-file/input.txt && echo \\\"processing time: $(date)\\\" > /tmp/intermediate-file/processing.txt\"\n                    ],\n                    \"resources\": {}\n                }\n            }\n        },\n        \"conditions\": [\n            {\n                \"type\": \"PodRunning\",\n                \"status\": \"False\"\n            },\n            {\n                \"type\": \"Completed\",\n                \"status\": \"True\"\n            }\n        ],\n        \"resourcesDuration\": {\n            \"cpu\": 9,\n            \"memory\": 9\n        },\n        \"storedWorkflowTemplateSpec\": {\n            \"templates\": [\n                {\n                    \"name\": \"main\",\n                    \"inputs\": {},\n                    \"outputs\": {},\n                    \"metadata\": {},\n                    \"steps\": [\n                        [\n                            {\n                                \"name\": \"process-artifact\",\n                                \"template\": \"process-artifact\",\n                                \"arguments\": {\n                                    \"parameters\": [\n                                        {\n                                            \"name\": \"source-path\",\n                                            \"value\": \"{{workflow.parameters.source-path}}\"\n                                        }\n                                    ]\n                                }\n                            }\n                        ],\n                        [\n                            {\n                                \"name\": \"compress-files\",\n                                \"template\": \"compress-files\",\n                                \"arguments\": {\n                                    \"parameters\": [\n                                        {\n                                            \"name\": \"target-path\",\n                                            \"value\": \"{{workflow.parameters.target-path}}\"\n                                        }\n                                    ],\n                                    \"artifacts\": [\n                                        {\n                                            \"name\": \"intermediate-file\",\n                                            \"from\": \"{{steps.process-artifact.outputs.artifacts.intermediate-file}}\"\n                                        }\n                                    ]\n                                }\n                            }\n                        ]\n                    ]\n                },\n                {\n                    \"name\": \"process-artifact\",\n                    \"inputs\": {\n                        \"parameters\": [\n                            {\n                                \"name\": \"source-path\"\n                            }\n                        ],\n                        \"artifacts\": [\n                            {\n                                \"name\": \"input-file\",\n                                \"path\": \"/tmp/input-file\",\n                                \"s3\": {\n                                    \"key\": \"{{inputs.parameters.source-path}}\"\n                                }\n                            }\n                        ]\n                    },\n                    \"outputs\": {\n                        \"artifacts\": [\n                            {\n                                \"name\": \"intermediate-file\",\n                                \"path\": \"/tmp/intermediate-file\"\n                            }\n                        ]\n                    },\n                    \"metadata\": {},\n                    \"container\": {\n                        \"name\": \"\",\n                        \"image\": \"alpine\",\n                        \"command\": [\n                            \"sh\",\n                            \"-c\"\n                        ],\n                        \"args\": [\n                            \"mkdir -p /tmp/intermediate-file/ && cp /tmp/input-file /tmp/intermediate-file/input.txt && echo \\\"processing time: $(date)\\\" > /tmp/intermediate-file/processing.txt\"\n                        ],\n                        \"resources\": {}\n                    }\n                },\n                {\n                    \"name\": \"compress-files\",\n                    \"inputs\": {\n                        \"parameters\": [\n                            {\n                                \"name\": \"target-path\"\n                            }\n                        ],\n                        \"artifacts\": [\n                            {\n                                \"name\": \"intermediate-file\",\n                                \"path\": \"/tmp/intermediate-file\"\n                            }\n                        ]\n                    },\n                    \"outputs\": {\n                        \"artifacts\": [\n                            {\n                                \"name\": \"output-file\",\n                                \"path\": \"/output-file\",\n                                \"s3\": {\n                                    \"key\": \"{{inputs.parameters.target-path}}\"\n                                },\n                                \"archive\": {\n                                    \"none\": {}\n                                }\n                            }\n                        ]\n                    },\n                    \"metadata\": {},\n                    \"container\": {\n                        \"name\": \"\",\n                        \"image\": \"alpine\",\n                        \"command\": [\n                            \"sh\",\n                            \"-c\"\n                        ],\n                        \"args\": [\n                            \"tar -cf output-file /tmp/intermediate-file\"\n                        ],\n                        \"resources\": {}\n                    }\n                }\n            ],\n            \"entrypoint\": \"main\",\n            \"arguments\": {\n                \"parameters\": [\n                    {\n                        \"name\": \"source-path\",\n                        \"value\": \"lorem.txt\"\n                    },\n                    {\n                        \"name\": \"target-path\",\n                        \"value\": \"result.tar\"\n                    }\n                ]\n            },\n            \"workflowTemplateRef\": {\n                \"name\": \"demo-artifacts-wft\"\n            }\n        },\n        \"artifactRepositoryRef\": {\n            \"configMap\": \"artifact-repositories\",\n            \"key\": \"default-artifact-repository\",\n            \"namespace\": \"argo\",\n            \"artifactRepository\": {\n                \"s3\": {\n                    \"endpoint\": \"172.17.20.10:30900\",\n                    \"bucket\": \"test\",\n                    \"insecure\": true,\n                    \"accessKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"accessKey\"\n                    },\n                    \"secretKeySecret\": {\n                        \"name\": \"my-minio-cred-new\",\n                        \"key\": \"secretKey\"\n                    }\n                }\n            }\n        },\n        \"artifactGCStatus\": {\n            \"notSpecified\": true\n        },\n        \"taskResultsCompleted\": {\n            \"demo-artifacts-wft-p2k8d-2168713698\": true,\n            \"demo-artifacts-wft-p2k8d-3067331989\": true\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get LOGS",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}/log?logOptions.container=main",
							"host": [
								"{{argo-endpoint}}"
							],
							"path": [
								"workflows",
								"{{namespace}}",
								"{{workflow-execution-name}}",
								"log"
							],
							"query": [
								{
									"key": "logOptions.container",
									"value": "main"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get LOGS",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{argo-endpoint}}/workflows/{{namespace}}/{{workflow-execution-name}}/log?logOptions.container=main",
									"host": [
										"{{argo-endpoint}}"
									],
									"path": [
										"workflows",
										"{{namespace}}",
										"{{workflow-execution-name}}",
										"log"
									],
									"query": [
										{
											"key": "logOptions.container",
											"value": "main"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Grpc-Metadata-Content-Type",
									"value": "application/grpc"
								},
								{
									"key": "X-Ratelimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-Ratelimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-Ratelimit-Reset",
									"value": "Wed, 10 Apr 2024 12:13:04 UTC"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Apr 2024 12:13:03 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\"result\":{\"content\":\"time=\\\"2024-04-10T12:11:03.019Z\\\" level=info msg=\\\"sub-process exited\\\" argo=true error=\\\"\\u003cnil\\u003e\\\"\",\"podName\":\"demo-artifacts-wft-p2k8d-process-artifact-2168713698\"}}\n{\"result\":{\"content\":\"time=\\\"2024-04-10T12:11:03.019Z\\\" level=info msg=\\\"/tmp/intermediate-file -\\u003e /var/run/argo/outputs/artifacts/tmp/intermediate-file.tgz\\\" argo=true\",\"podName\":\"demo-artifacts-wft-p2k8d-process-artifact-2168713698\"}}\n{\"result\":{\"content\":\"time=\\\"2024-04-10T12:11:03.019Z\\\" level=info msg=\\\"Taring /tmp/intermediate-file\\\"\",\"podName\":\"demo-artifacts-wft-p2k8d-process-artifact-2168713698\"}}\n{\"result\":{\"content\":\"time=\\\"2024-04-10T12:11:03.020Z\\\" level=info msg=\\\"archived 3 files/dirs in /tmp/intermediate-file\\\"\",\"podName\":\"demo-artifacts-wft-p2k8d-process-artifact-2168713698\"}}\n{\"result\":{\"content\":\"tar: removing leading '/' from member names\",\"podName\":\"demo-artifacts-wft-p2k8d-compress-files-3067331989\"}}\n{\"result\":{\"content\":\"time=\\\"2024-04-10T12:11:13.069Z\\\" level=info msg=\\\"sub-process exited\\\" argo=true error=\\\"\\u003cnil\\u003e\\\"\",\"podName\":\"demo-artifacts-wft-p2k8d-compress-files-3067331989\"}}\n{\"result\":{\"content\":\"time=\\\"2024-04-10T12:11:13.070Z\\\" level=info msg=\\\"/output-file -\\u003e /var/run/argo/outputs/artifacts/output-file.tgz\\\" argo=true\",\"podName\":\"demo-artifacts-wft-p2k8d-compress-files-3067331989\"}}\n{\"result\":{\"content\":\"time=\\\"2024-04-10T12:11:13.070Z\\\" level=info msg=\\\"Taring /output-file\\\"\",\"podName\":\"demo-artifacts-wft-p2k8d-compress-files-3067331989\"}}\n"
						}
					]
				},
				{
					"name": "Download Output Artifact",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{argo-artifact-endpoint}}/{{namespace}}/workflows/{{workflow-execution-name}}/{{workflow-outbound-node}}/outputs/output-artifact",
							"host": [
								"{{argo-artifact-endpoint}}"
							],
							"path": [
								"{{namespace}}",
								"workflows",
								"{{workflow-execution-name}}",
								"{{workflow-outbound-node}}",
								"outputs",
								"output-artifact"
							]
						}
					},
					"response": [
						{
							"name": "Download Output Artifact",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{argo-artifact-endpoint}}/{{namespace}}/workflows/{{workflow-execution-name}}/{{workflow-outbound-node}}/outputs/output-file",
									"host": [
										"{{argo-artifact-endpoint}}"
									],
									"path": [
										"{{namespace}}",
										"workflows",
										"{{workflow-execution-name}}",
										"{{workflow-outbound-node}}",
										"outputs",
										"output-file"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "raw",
							"header": [
								{
									"key": "Content-Disposition",
									"value": "filename=\"result.tar\""
								},
								{
									"key": "Content-Security-Policy",
									"value": "sandbox; base-uri 'none'; default-src 'none'; img-src 'self'; style-src 'self' 'unsafe-inline'"
								},
								{
									"key": "Content-Type",
									"value": ""
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Ratelimit-Limit",
									"value": "1000"
								},
								{
									"key": "X-Ratelimit-Remaining",
									"value": "999"
								},
								{
									"key": "X-Ratelimit-Reset",
									"value": "Wed, 10 Apr 2024 12:16:04 UTC"
								},
								{
									"key": "Date",
									"value": "Wed, 10 Apr 2024 12:16:04 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "tmp/intermediate-file/\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00000000755\u00000000000\u00000000000\u000000000000000\u000014605500735\u0000013750\u0000 5\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ustar  \u0000root\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000root\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000tmp/intermediate-file/input.txt\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00000000600\u00000000000\u00000000000\u000000000000020\u000014605500735\u0000015630\u0000 0\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ustar  \u0000root\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000root\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000test lorem ipsum\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000tmp/intermediate-file/processing.txt\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00000000666\u00000000000\u00000000000\u000000000000056\u000014605500735\u0000016672\u0000 0\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ustar  \u0000root\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000root\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000processing time: Wed Apr 10 12:11:02 UTC 2024\n\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJSUzI1NiIsImtpZCI6InVwbFRKNUROR052aTZNSG1zbHFfQmVtS1RieG14eTN4Vi1GZ203SDZXUUEifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJhcmdvIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImFyZ28tdXNlci5zZXJ2aWNlLWFjY291bnQtdG9rZW4iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiYXJnby11c2VyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNzgxMmI0MmYtMWZjYS00ZjY2LThhN2EtMjhjMWJkYzkzMzU0Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OmFyZ286YXJnby11c2VyIn0.khEZVplgz737W3aQ1vlh9v00yiTlsr46g1S7lUMlrv64Cx93dW1w-1AHQlhGXqLc3He9ptEyCUKiCORxcvyKX2DhZHCgd4D0InoUTMbMqoiDi62psFPMFgPtsBfmec1s4MFvWaqJ1V0MYHqPbY0GBfmoy2HVGCK5s85CHGqUn66uQclCWVXhJYo_XZuQMvSeLnZ9zEKAF9EhRdHXZXAQQ7OiQvxy_X7kITXUkxAZKBgZ1gDxLI7r5tYNGtemXAb4ErzAUbf_oiwy_yB5o3LPtZE5PRZ2VvL6dPSskVHtV_S6uvWSzowkxNjjpiptTfnTesuG2A6RnUPF7_zY63O4cQ",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "argo_token",
			"value": "eyJ",
			"disabled": true
		},
		{
			"key": "namespace",
			"value": "argo",
			"type": "string"
		}
	]
}